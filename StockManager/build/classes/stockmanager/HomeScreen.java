/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package stockmanager;

/**
 *
 * @author ASUS
 */
import java.sql.*;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.ResultSet;

import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import java.util.ArrayList;
import javax.swing.table.TableModel;


public class HomeScreen extends javax.swing.JFrame {

        Connection con = null;
        ResultSet rs = null;
        PreparedStatement pst = null;
        Statement st = null;
        
        String URL = "jdbc:sqlserver://127.0.0.1:1433;databaseName=DB2";
        String user = "rithy";
        String pass = "241043";
        
        Category cg = new Category();
        Staff sf = new Staff();
        Product pd = new Product();
        
    //Constructors
    public HomeScreen() {
                initComponents();
                
                //Category
                cg.categoryAutoID();
                cg.show_Category();
                
               
                //Staff
                sf.show_Staff();
                
                //Product
                pd.productAutoID();
                pd.show_Product();
                pd.getDataIntoCombobox();
             
    }
    
         

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        Product_Dashboard = new javax.swing.JLabel();
        category_pane = new javax.swing.JPanel();
        category_dashboard = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        History_Dashboard = new javax.swing.JLabel();
        DashBoard1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        History_Dashboard2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        History_Dashboard3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        History_Dashboard1 = new javax.swing.JLabel();
        panestaff_dashboard = new javax.swing.JPanel();
        staff_dashboard = new javax.swing.JLabel();
        panestaff_dashboard1 = new javax.swing.JPanel();
        staff_dashboard1 = new javax.swing.JLabel();
        panestaff_dashboard2 = new javax.swing.JPanel();
        staff_dashboard2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tappane = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        category_update = new javax.swing.JButton();
        category_add = new javax.swing.JButton();
        category_delete = new javax.swing.JButton();
        category_reset = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        categorysearch_textfield = new javax.swing.JTextField();
        category_txterror = new javax.swing.JTextField();
        txtcategoryname = new javax.swing.JTextField();
        lblCategoryNo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        productsearch_textfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        productno_textfield = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        productname_textfield = new javax.swing.JTextField();
        productcategoryno_textfield = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        productunitprice_textfield = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        productsellingprice_textfield = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        productquantity_textfield = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        productrecevingdate_textfield = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        productexpiredate_textfield = new javax.swing.JTextField();
        product_delete = new javax.swing.JButton();
        product_update = new javax.swing.JButton();
        product_add = new javax.swing.JButton();
        product_reset = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        product_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        categorysearch_textfield1 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField5 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        historysearch_textfield2 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        historysearch_textfield = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        productno_textfield1 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        historysearch_textfield1 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        historyinvoiceno_textfield1 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        historyinvoiceno_textfield2 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        historyinvoiceno_textfield3 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        historyinvoiceno_textfield4 = new javax.swing.JTextField();
        historyshowlist_textfield9 = new javax.swing.JButton();
        historyshowlist_textfield10 = new javax.swing.JButton();
        historyshowlist_textfield11 = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        historyinvoiceno_textfield5 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        historyshowlist_textfield6 = new javax.swing.JButton();
        historyshowlist_textfield8 = new javax.swing.JButton();
        textField1 = new java.awt.TextField();
        textField2 = new java.awt.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });
        jPanel5.setLayout(new java.awt.GridBagLayout());

        Product_Dashboard.setForeground(new java.awt.Color(255, 255, 255));
        Product_Dashboard.setText("Product");
        Product_Dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Product_DashboardMouseClicked(evt);
            }
        });
        jPanel5.add(Product_Dashboard, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 226, 204, 46));

        category_pane.setBackground(new java.awt.Color(102, 102, 102));
        category_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_paneMouseClicked(evt);
            }
        });
        category_pane.setLayout(new java.awt.GridBagLayout());

        category_dashboard.setForeground(new java.awt.Color(255, 255, 255));
        category_dashboard.setText("Category");
        category_dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_dashboardMouseClicked(evt);
            }
        });
        category_pane.add(category_dashboard, new java.awt.GridBagConstraints());

        jPanel1.add(category_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 204, 46));

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });
        jPanel6.setLayout(new java.awt.GridBagLayout());

        History_Dashboard.setForeground(new java.awt.Color(255, 255, 255));
        History_Dashboard.setText("Invoice");
        History_Dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                History_DashboardMouseClicked(evt);
            }
        });
        jPanel6.add(History_Dashboard, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 204, 46));

        DashBoard1.setBackground(new java.awt.Color(36, 29, 29));
        DashBoard1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_home_26px_1.png"))); // NOI18N
        DashBoard1.add(jLabel3, new java.awt.GridBagConstraints());

        jPanel1.add(DashBoard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 136, 204, 46));

        jPanel8.setBackground(new java.awt.Color(102, 102, 102));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });
        jPanel8.setLayout(new java.awt.GridBagLayout());

        History_Dashboard2.setForeground(new java.awt.Color(255, 255, 255));
        History_Dashboard2.setText("Staff");
        History_Dashboard2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                History_Dashboard2MouseClicked(evt);
            }
        });
        jPanel8.add(History_Dashboard2, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 204, 46));

        jPanel9.setBackground(new java.awt.Color(102, 102, 102));
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
        });
        jPanel9.setLayout(new java.awt.GridBagLayout());

        History_Dashboard3.setForeground(new java.awt.Color(255, 255, 255));
        History_Dashboard3.setText("Customer");
        History_Dashboard3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                History_Dashboard3MouseClicked(evt);
            }
        });
        jPanel9.add(History_Dashboard3, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 204, 46));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("     Lay Rithy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 53, 12, 55);
        jPanel3.add(jLabel1, gridBagConstraints);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_home_50px.png"))); // NOI18N
        jPanel3.add(jLabel2, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 28, -1, 97));

        History_Dashboard1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        History_Dashboard1.setForeground(new java.awt.Color(255, 255, 255));
        History_Dashboard1.setText("Log Out");
        History_Dashboard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                History_Dashboard1MouseClicked(evt);
            }
        });
        jPanel1.add(History_Dashboard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        panestaff_dashboard.setBackground(new java.awt.Color(102, 102, 102));
        panestaff_dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panestaff_dashboardMouseClicked(evt);
            }
        });
        panestaff_dashboard.setLayout(new java.awt.GridBagLayout());

        staff_dashboard.setForeground(new java.awt.Color(255, 255, 255));
        staff_dashboard.setText("Create Account");
        staff_dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staff_dashboardMouseClicked(evt);
            }
        });
        panestaff_dashboard.add(staff_dashboard, new java.awt.GridBagConstraints());

        jPanel1.add(panestaff_dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 204, 46));

        panestaff_dashboard1.setBackground(new java.awt.Color(102, 102, 102));
        panestaff_dashboard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panestaff_dashboard1MouseClicked(evt);
            }
        });
        panestaff_dashboard1.setLayout(new java.awt.GridBagLayout());

        staff_dashboard1.setForeground(new java.awt.Color(255, 255, 255));
        staff_dashboard1.setText("History");
        staff_dashboard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staff_dashboard1MouseClicked(evt);
            }
        });
        panestaff_dashboard1.add(staff_dashboard1, new java.awt.GridBagConstraints());

        jPanel1.add(panestaff_dashboard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 204, 46));

        panestaff_dashboard2.setBackground(new java.awt.Color(102, 102, 102));
        panestaff_dashboard2.setLayout(new java.awt.GridBagLayout());

        staff_dashboard2.setForeground(new java.awt.Color(255, 255, 255));
        staff_dashboard2.setText("Sell");
        panestaff_dashboard2.add(staff_dashboard2, new java.awt.GridBagConstraints());

        jPanel1.add(panestaff_dashboard2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 204, 46));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 850));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(2546, 514));

        jPanel19.setBackground(new java.awt.Color(153, 153, 153));

        jPanel32.setBackground(new java.awt.Color(153, 153, 153));
        jPanel32.setLayout(new java.awt.GridBagLayout());

        jLabel42.setBackground(new java.awt.Color(0, 0, 0));
        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel42.setText("Staff");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel32.add(jLabel42, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel19Layout = new org.jdesktop.layout.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel32, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel19Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel20.setBackground(new java.awt.Color(153, 153, 153));

        jPanel31.setBackground(new java.awt.Color(153, 153, 153));
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jLabel41.setBackground(new java.awt.Color(0, 0, 0));
        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel41.setText("Customer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel31.add(jLabel41, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel20Layout = new org.jdesktop.layout.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel31, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel20Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel21.setBackground(new java.awt.Color(153, 153, 153));

        jPanel30.setBackground(new java.awt.Color(153, 153, 153));
        jPanel30.setLayout(new java.awt.GridBagLayout());

        jLabel40.setBackground(new java.awt.Color(0, 0, 0));
        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel40.setText("Product");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel30.add(jLabel40, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel21Layout = new org.jdesktop.layout.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel30, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel21Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel22.setBackground(new java.awt.Color(153, 153, 153));

        jPanel29.setBackground(new java.awt.Color(153, 153, 153));
        jPanel29.setLayout(new java.awt.GridBagLayout());

        jLabel30.setBackground(new java.awt.Color(0, 0, 0));
        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel30.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel29.add(jLabel30, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel22Layout = new org.jdesktop.layout.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel29, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel22Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel23.setBackground(new java.awt.Color(153, 153, 153));

        jPanel34.setBackground(new java.awt.Color(153, 153, 153));
        jPanel34.setLayout(new java.awt.GridBagLayout());

        jLabel44.setBackground(new java.awt.Color(0, 0, 0));
        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel44.setText("History");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel34.add(jLabel44, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel23Layout = new org.jdesktop.layout.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel34, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel23Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel24.setBackground(new java.awt.Color(153, 153, 153));

        jPanel33.setBackground(new java.awt.Color(153, 153, 153));
        jPanel33.setLayout(new java.awt.GridBagLayout());

        jLabel43.setBackground(new java.awt.Color(0, 0, 0));
        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel43.setText("Invoice");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel33.add(jLabel43, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel24Layout = new org.jdesktop.layout.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel33, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel24Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(35, 35, 35)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel22, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel19, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(49, 49, 49)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(54, 54, 54)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(5761, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(55, 55, 55)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(61, 61, 61)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(335, Short.MAX_VALUE))
        );

        tappane.addTab("Home", jPanel4);

        jPanel15.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Category No:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Category Name:");

        category_update.setBackground(new java.awt.Color(102, 102, 102));
        category_update.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        category_update.setForeground(new java.awt.Color(255, 255, 255));
        category_update.setText("Update");
        category_update.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        category_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_updateActionPerformed(evt);
            }
        });

        category_add.setBackground(new java.awt.Color(102, 102, 102));
        category_add.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        category_add.setForeground(new java.awt.Color(255, 255, 255));
        category_add.setText("Add");
        category_add.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        category_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_addActionPerformed(evt);
            }
        });

        category_delete.setBackground(new java.awt.Color(102, 102, 102));
        category_delete.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        category_delete.setForeground(new java.awt.Color(255, 255, 255));
        category_delete.setText("Delete");
        category_delete.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        category_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_deleteActionPerformed(evt);
            }
        });

        category_reset.setBackground(new java.awt.Color(102, 102, 102));
        category_reset.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        category_reset.setForeground(new java.awt.Color(255, 255, 255));
        category_reset.setText("Reset");
        category_reset.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        category_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_resetActionPerformed(evt);
            }
        });

        jLabel6.setText("Search");

        categorysearch_textfield.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        categorysearch_textfield.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        categorysearch_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categorysearch_textfieldKeyReleased(evt);
            }
        });

        category_txterror.setBackground(new java.awt.Color(204, 204, 204));
        category_txterror.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        category_txterror.setForeground(new java.awt.Color(255, 0, 0));
        category_txterror.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        txtcategoryname.setBackground(new java.awt.Color(204, 204, 204));
        txtcategoryname.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtcategoryname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblCategoryNo.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblCategoryNo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel15Layout = new org.jdesktop.layout.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel15Layout.createSequentialGroup()
                        .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, category_txterror)
                            .add(jPanel15Layout.createSequentialGroup()
                                .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(categorysearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE)))
                        .add(23, 23, 23))
                    .add(jPanel15Layout.createSequentialGroup()
                        .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jLabel4))
                        .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel15Layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(txtcategoryname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 293, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel15Layout.createSequentialGroup()
                                .add(16, 16, 16)
                                .add(lblCategoryNo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .add(jPanel15Layout.createSequentialGroup()
                .add(94, 94, 94)
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(category_reset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(category_delete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(category_update, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(category_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel15Layout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(categorysearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26)
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel4)
                    .add(lblCategoryNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(category_txterror, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel5)
                    .add(txtcategoryname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(32, 32, 32)
                .add(category_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(category_update, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(category_delete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(category_reset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category No", "Category Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable3);

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(jPanel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 278, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(152, 152, 152)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(5809, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel15, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel10Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(359, Short.MAX_VALUE))
        );

        tappane.addTab("Category", jPanel10);

        jPanel16.setBackground(new java.awt.Color(204, 204, 204));
        jPanel16.setPreferredSize(new java.awt.Dimension(340, 543));

        jLabel7.setText("Search");

        productsearch_textfield.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productsearch_textfield.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productsearch_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productsearch_textfieldKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("Product No. :");

        productno_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productno_textfield.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productno_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("Product Name: ");

        productname_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productname_textfield.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        productname_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        productcategoryno_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productcategoryno_textfield.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productcategoryno_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel10.setText("Category No. :");

        productunitprice_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productunitprice_textfield.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productunitprice_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel11.setText("Unit Price :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel12.setText("Selling Price :");

        productsellingprice_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productsellingprice_textfield.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productsellingprice_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel13.setText("Quantity :");

        productquantity_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productquantity_textfield.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productquantity_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel14.setText("Receving Date :");

        productrecevingdate_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productrecevingdate_textfield.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productrecevingdate_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel15.setText("Expire Date :");

        productexpiredate_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productexpiredate_textfield.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productexpiredate_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        product_delete.setBackground(new java.awt.Color(102, 102, 102));
        product_delete.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        product_delete.setForeground(new java.awt.Color(255, 255, 255));
        product_delete.setText("Delete");
        product_delete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        product_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_deleteActionPerformed(evt);
            }
        });

        product_update.setBackground(new java.awt.Color(102, 102, 102));
        product_update.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        product_update.setForeground(new java.awt.Color(255, 255, 255));
        product_update.setText("Update");
        product_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        product_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_updateActionPerformed(evt);
            }
        });

        product_add.setBackground(new java.awt.Color(102, 102, 102));
        product_add.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        product_add.setForeground(new java.awt.Color(255, 255, 255));
        product_add.setText("Add");
        product_add.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        product_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_addActionPerformed(evt);
            }
        });

        product_reset.setBackground(new java.awt.Color(102, 102, 102));
        product_reset.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        product_reset.setForeground(new java.awt.Color(255, 255, 255));
        product_reset.setText("Reset");
        product_reset.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        product_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_resetActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel16Layout = new org.jdesktop.layout.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel16Layout.createSequentialGroup()
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(productsearch_textfield))
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel9)
                                    .add(jLabel11)
                                    .add(jLabel12)
                                    .add(jLabel13)
                                    .add(jLabel8)
                                    .add(jLabel10))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(productsellingprice_textfield, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                        .add(productunitprice_textfield)
                                        .add(productno_textfield)
                                        .add(productquantity_textfield)
                                        .add(productname_textfield, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                                    .add(jPanel16Layout.createSequentialGroup()
                                        .add(productcategoryno_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel15)
                                    .add(jLabel14))
                                .add(18, 18, 18)
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(productrecevingdate_textfield, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .add(productexpiredate_textfield))))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel16Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, product_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, product_reset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(51, 51, 51)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(product_update, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(product_delete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(46, 46, 46))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(productsearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(42, 42, 42)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(productno_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(productname_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(productcategoryno_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(16, 16, 16)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(productunitprice_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(productsellingprice_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(productquantity_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(productrecevingdate_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(productexpiredate_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(34, 34, 34)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(product_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(product_update, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(14, 14, 14)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(product_reset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(product_delete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(286, Short.MAX_VALUE))
        );

        product_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product No", "Product Name", "Category No", "UnitPrice", "Selling Price", "Quantity", "Receving Date", "Expire Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        product_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                product_tableMouseClicked(evt);
            }
        });
        product_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                product_tableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(product_table);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Refresh Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel11Layout = new org.jdesktop.layout.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11Layout.createSequentialGroup()
                .add(jPanel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 302, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 181, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 654, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(5726, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .add(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(20, 20, 20)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tappane.addTab("Product", jPanel11);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Staff ID", "Staff Name", "Staff Gender", "Staff Position", "Staff Phone", "Staff Address"
            }
        ));
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTable5);

        categorysearch_textfield1.setBackground(new java.awt.Color(240, 240, 240));
        categorysearch_textfield1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        categorysearch_textfield1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        categorysearch_textfield1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categorysearch_textfield1KeyReleased(evt);
            }
        });

        jLabel33.setText("Search :");

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton4.setText("Refresh Table");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel18.setForeground(new java.awt.Color(240, 240, 240));
        jLabel18.setText("jLabel18");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(24, 24, 24)
                                .add(jLabel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(categorysearch_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(112, 112, 112)
                                .add(jLabel18)))
                        .add(36, 36, 36)
                        .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 520, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(504, 504, 504)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(5847, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(54, 54, 54)
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel33)
                            .add(categorysearch_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(59, 59, 59)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(111, 111, 111)
                        .add(jLabel18))
                    .add(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(298, Short.MAX_VALUE))
        );

        tappane.addTab("Staff", jPanel7);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cus ID", "Cus Name", "Cus Gender", "CUs Phone", "Cus Address"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jTextField5.setBackground(new java.awt.Color(240, 240, 240));
        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        jLabel16.setText("Search :");

        org.jdesktop.layout.GroupLayout jPanel12Layout = new org.jdesktop.layout.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .add(34, 34, 34)
                .add(jLabel16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(56, 56, 56)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(5907, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel16)
                        .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(351, Short.MAX_VALUE))
        );

        tappane.addTab("Customer", jPanel12);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice No", "Invoice Date", "Cus ID", "Staff ID", "Sub Amount", "Discount", "Tax", "Total"
            }
        ));
        jScrollPane8.setViewportView(jTable6);

        historysearch_textfield2.setBackground(new java.awt.Color(240, 240, 240));
        historysearch_textfield2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        historysearch_textfield2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        historysearch_textfield2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historysearch_textfield2ActionPerformed(evt);
            }
        });

        jLabel57.setText("Search");

        org.jdesktop.layout.GroupLayout jPanel27Layout = new org.jdesktop.layout.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(historysearch_textfield2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(26, 26, 26)
                .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 686, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(5772, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel27Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel57)
                        .add(historysearch_textfield2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(352, Short.MAX_VALUE))
        );

        tappane.addTab("Invoice", jPanel27);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice No", "Product No", "Sale QTY", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(20);
        }

        historysearch_textfield.setBackground(new java.awt.Color(240, 240, 240));
        historysearch_textfield.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        historysearch_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        jLabel17.setText("Search");

        productno_textfield1.setBackground(new java.awt.Color(204, 204, 204));
        productno_textfield1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productno_textfield1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel14Layout = new org.jdesktop.layout.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(jLabel17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(historysearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(28, 28, 28)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 590, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 5837, Short.MAX_VALUE))
            .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel14Layout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(productno_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(37, 37, 37)
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel17)
                        .add(historysearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(347, Short.MAX_VALUE))
            .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel14Layout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(productno_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );

        tappane.addTab("History", jPanel14);

        jPanel26.setBackground(new java.awt.Color(204, 204, 204));
        jPanel26.setPreferredSize(new java.awt.Dimension(162, 529));

        historysearch_textfield1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        historysearch_textfield1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel45.setText("Search");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel46.setText("Cus Name :");

        historyinvoiceno_textfield1.setBackground(new java.awt.Color(204, 204, 204));
        historyinvoiceno_textfield1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        historyinvoiceno_textfield1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel47.setText("Cus Gender :");

        historyinvoiceno_textfield2.setBackground(new java.awt.Color(204, 204, 204));
        historyinvoiceno_textfield2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        historyinvoiceno_textfield2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel48.setText("Cus Phone :");

        historyinvoiceno_textfield3.setBackground(new java.awt.Color(204, 204, 204));
        historyinvoiceno_textfield3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        historyinvoiceno_textfield3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel49.setText("Cus Address :");

        historyinvoiceno_textfield4.setBackground(new java.awt.Color(204, 204, 204));
        historyinvoiceno_textfield4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        historyinvoiceno_textfield4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        historyshowlist_textfield9.setBackground(new java.awt.Color(102, 102, 102));
        historyshowlist_textfield9.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        historyshowlist_textfield9.setForeground(new java.awt.Color(255, 255, 255));
        historyshowlist_textfield9.setText("Add");
        historyshowlist_textfield9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        historyshowlist_textfield10.setBackground(new java.awt.Color(102, 102, 102));
        historyshowlist_textfield10.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        historyshowlist_textfield10.setForeground(new java.awt.Color(255, 255, 255));
        historyshowlist_textfield10.setText("Clear");
        historyshowlist_textfield10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        historyshowlist_textfield11.setBackground(new java.awt.Color(102, 102, 102));
        historyshowlist_textfield11.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        historyshowlist_textfield11.setForeground(new java.awt.Color(255, 255, 255));
        historyshowlist_textfield11.setText("Delete");
        historyshowlist_textfield11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel56.setText("Cus ID :");

        historyinvoiceno_textfield5.setBackground(new java.awt.Color(204, 204, 204));
        historyinvoiceno_textfield5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        historyinvoiceno_textfield5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel26Layout = new org.jdesktop.layout.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(jLabel45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(historysearch_textfield1))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(jLabel46)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(historyinvoiceno_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(jLabel47)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(historyinvoiceno_textfield2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(jLabel48)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(historyinvoiceno_textfield3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(jLabel49)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(historyinvoiceno_textfield4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(historyshowlist_textfield11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(historyshowlist_textfield10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, historyshowlist_textfield9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(jLabel56)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(historyinvoiceno_textfield5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel45)
                    .add(historysearch_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(42, 42, 42)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel56)
                    .add(historyinvoiceno_textfield5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel46)
                    .add(historyinvoiceno_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel47)
                    .add(historyinvoiceno_textfield2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel48)
                    .add(historyinvoiceno_textfield3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel49)
                    .add(historyinvoiceno_textfield4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(historyshowlist_textfield9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(historyshowlist_textfield11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(historyshowlist_textfield10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Product No", "Product Name", "Category No", "Quantity", "Unit Price", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable4);

        jLabel50.setText("Sub Amount :");

        jLabel51.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel52.setText("Discount (%) :");

        jLabel53.setText("Tax :");

        jLabel54.setText("Total :");

        jLabel55.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel58.setText("Customer ID:");

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel59.setText("Address :");

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel60.setText("Name :");

        jLabel61.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel61.setText("jLabel61");

        jLabel62.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel62.setText("jLabel61");

        jLabel63.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel63.setText("jLabel61");

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel64.setText("Invoice");

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel65.setText("Date :");

        jLabel66.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel66.setText("jLabel61");

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel67.setText("Invoice No :");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane6.setViewportView(jTextArea1);

        historyshowlist_textfield6.setBackground(new java.awt.Color(102, 102, 102));
        historyshowlist_textfield6.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        historyshowlist_textfield6.setForeground(new java.awt.Color(255, 255, 255));
        historyshowlist_textfield6.setText("Reset");
        historyshowlist_textfield6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        historyshowlist_textfield8.setBackground(new java.awt.Color(102, 102, 102));
        historyshowlist_textfield8.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        historyshowlist_textfield8.setForeground(new java.awt.Color(255, 255, 255));
        historyshowlist_textfield8.setText("Finish");
        historyshowlist_textfield8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        textField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel13Layout = new org.jdesktop.layout.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .add(jPanel26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel13Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel13Layout.createSequentialGroup()
                                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(35, 35, 35)
                                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(textField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(43, 43, 43)
                                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(textField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(18, 18, 18)
                                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(52, 52, 52)
                                .add(historyshowlist_textfield8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel13Layout.createSequentialGroup()
                                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel13Layout.createSequentialGroup()
                                        .add(jLabel59)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jLabel61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                        .add(jPanel13Layout.createSequentialGroup()
                                            .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(jPanel13Layout.createSequentialGroup()
                                                    .add(jLabel60)
                                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                    .add(jLabel63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                .add(jPanel13Layout.createSequentialGroup()
                                                    .add(jLabel58)
                                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                    .add(jLabel62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                            .add(128, 128, 128)
                                            .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(jPanel13Layout.createSequentialGroup()
                                                    .add(jLabel67)
                                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                    .add(jLabel66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                .add(jLabel65)))
                                        .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 502, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(18, 18, 18)
                                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 225, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jPanel13Layout.createSequentialGroup()
                        .add(235, 235, 235)
                        .add(jLabel64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(0, 5669, Short.MAX_VALUE))
            .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel13Layout.createSequentialGroup()
                    .add(1768, 1768, 1768)
                    .add(historyshowlist_textfield6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(4824, Short.MAX_VALUE)))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .add(jPanel26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 282, Short.MAX_VALUE))
            .add(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel64)
                .add(11, 11, 11)
                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel13Layout.createSequentialGroup()
                        .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel58)
                            .add(jLabel62)
                            .add(jLabel66)
                            .add(jLabel67))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel60)
                            .add(jLabel63)
                            .add(jLabel65))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel59)
                            .add(jLabel61))
                        .add(21, 21, 21)
                        .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 309, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 403, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(historyshowlist_textfield8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel13Layout.createSequentialGroup()
                        .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel50)
                                .add(jLabel52)
                                .add(jLabel54)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(textField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(textField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel13Layout.createSequentialGroup()
                    .add(384, 384, 384)
                    .add(historyshowlist_textfield6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(385, Short.MAX_VALUE)))
        );

        tappane.addTab("Sell", jPanel13);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(tappane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(tappane))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, 850));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //GetConnect to Database
    public Connection getConnection(){
            Connection con;
            try{
                con = DriverManager.getConnection(URL , user , pass);
                return con;
            }catch (Exception e){
                e.printStackTrace();
                return null;
            }
    }
    
    //Alert Box
    public void infoMessage(String message, String title){
        
            JOptionPane.showMessageDialog(null, message, title, JOptionPane.INFORMATION_MESSAGE);
    }

//Class controll funfction of Category    
class Category{   
    
    int lastid;
    //get auto id
    public void categoryAutoID(){
            try{
                    Connection con =  DriverManager.getConnection(URL , user , pass);
                    Statement st = con.createStatement();
            
                    String selectQuery = "SELECT max(CategoryNo) FROM Category";
                    ResultSet rs = st.executeQuery(selectQuery);
                    //System.out.println(rs);
                    if(rs.next()){
                            //System.out.println(rs.getInt(1));
                            lastid = rs.getInt(1);
                            //System.out.println(lastid);
                            lastid++;
                        
                            lblCategoryNo.setText(Integer.toString(lastid));
                    }
                
            }catch (Exception e) {
                  throw new Error("Problem", e);
                  //e.printStackTrace();
            }
    }
    
    //Show List Of Category
    public void show_Category(){
        
             try{
                            
                    Connection con =  DriverManager.getConnection(URL , user , pass);
                    Statement st=con.createStatement();  

                    String selectQuery="SELECT * FROM Category";
                    ResultSet rs = st.executeQuery(selectQuery);

                    while(rs.next())  {
                                
                            String cid = String.valueOf(rs.getInt("CategoryNo"));
                                    
                            String cname = rs.getString("CategoryName");
                                    
                            String tbData [] = {cid, cname};
                            DefaultTableModel tblModel = (DefaultTableModel)jTable3.getModel();
                                    
                            tblModel.addRow(tbData);
                    }
                        
            }catch (Exception e) {
                  throw new Error("Problem", e);
            }
    }
    
    //Clear data from Table Category
    public void clearTableCategory(){
        
                jTable3.setModel(new DefaultTableModel (null, new String[] {"Category No", "Category Name"}));
    }
    
}



class Staff{
    

    //Show List Of Staff
    public void show_Staff(){
        
        try{
                            
            con =  DriverManager.getConnection(URL , user , pass);
            st=con.createStatement();  

            String selectQuery="SELECT * FROM Staff";
            rs = st.executeQuery(selectQuery);

                while(rs.next()){
                                
                    String sid = String.valueOf(rs.getInt("StaffID"));
                    String sname = rs.getString("StaffName");
                    String spassword = rs.getString("StaffPassword");
                    String sgender = rs.getString("StaffGender");
                    String sposition = rs.getString("StaffPosition");
                    String sphone = rs.getString("StaffPhone");
                    String saddress = rs.getString("StaffAddress");
                            
                    String tbData [] = {sid, sname, spassword, sgender, sposition, sphone, saddress};
                    DefaultTableModel tblModel = (DefaultTableModel)jTable5.getModel();
                    tblModel.addRow(tbData);
                }
                        
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
    }//end method Show_Staff
    
    
    //clear all data in table
    public void clearStaffTableData(){
        jTable5.setModel(new DefaultTableModel (null, new String[] {"Staff ID", "Staff Name", "Staff Gender", "Staff Position", "Staff Phone" ,"Staff Address"}));
    }
    
    
}//end class Staff (inner class)   
    
class Product{
    int lastid;
    //get auto id
    public void productAutoID(){
        
        try{
            con =  DriverManager.getConnection(URL , user , pass);
            st = con.createStatement();
            
            String selectQuery = "SELECT max(ProductNo) FROM Product";
            rs = st.executeQuery(selectQuery);
                   
            if(rs.next()){
                            
                lastid = rs.getInt(1);
                           
                lastid++;
                        
                productno_textfield.setText(Integer.toString(lastid));
            }
                
        }catch (Exception e) {
            throw new Error("Problem", e);
                 
        }
    }
    
    
    //set list product empty in textfield
    public void setProductEmpty(){
        productno_textfield.setText("");
        productname_textfield.setText("");
        productcategoryno_textfield.setText("");
        productunitprice_textfield.setText("");
        productsellingprice_textfield.setText("");
        productquantity_textfield.setText("");
        productrecevingdate_textfield.setText("");
        productexpiredate_textfield.setText("");   
                        
        pd.productAutoID();
    }
    
    //Show List Of Product
    public void show_Product(){
        
        try{
                            
            Connection con =  DriverManager.getConnection(URL , user , pass);
            Statement st=con.createStatement();  

            String selectQuery="SELECT * FROM Product";
            ResultSet rs = st.executeQuery(selectQuery);

            while(rs.next())  {
                                
                String pno = String.valueOf(rs.getInt("ProductNo"));
                String pname = rs.getString("ProductName");
                String cno = rs.getString("CategoryNo");
                String punitprice = rs.getString("UnitPrice");
                String psellingprice = rs.getString("SellingPrice");
                String pquantity = rs.getString("Quantity");
                String preceivingdate = rs.getString("ReceivingDate");
                String pexpiredate = rs.getString("Expire_Date");
                                    
                String tbData [] = {pno, pname, cno, punitprice, psellingprice, pquantity, preceivingdate, pexpiredate};
                DefaultTableModel tblModel = (DefaultTableModel)product_table.getModel();
                                    
                tblModel.addRow(tbData);
            }
                        
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }
    
    
    //clear all data in table
    public void clearProductTableData(){
        product_table.setModel(new DefaultTableModel (null, new String[] {"Product No", "Product Name", "Category No", "UnitPrice", "Selling Price" ,"Quantity", "Receiving Date", "Expire Date"}));
    }
    
    
    //get data from sql into combobox
    public void getDataIntoCombobox(){
        try{
                            
            Connection con =  DriverManager.getConnection(URL , user , pass);
            Statement st=con.createStatement();  

            String selectQuery="SELECT CategoryName FROM Category";
            ResultSet rs = st.executeQuery(selectQuery);

            while(rs.next())  {
                String cname = rs.getString("CategoryName");
                jComboBox1.addItem(cname);
            }
                        
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }
    
    
    //clear data in JCombobox
    public void clearDataCombo(){
        DefaultComboBoxModel dm = new DefaultComboBoxModel();
        jComboBox1.setModel(dm);
    }
}//end class Product (Inner class)
    

 // Execute The Insert Update And Delete Querys
   public void executeSQlQuery_Category(String query, String message)
   {
       
       try{
           con = DriverManager.getConnection(URL , user , pass);
           
           st = con.createStatement();
            
           //this codition if selected record on table (if select = 1)
           if((st.executeUpdate(query)) == 1){
               
                // refresh jtable data
                DefaultTableModel model1 = (DefaultTableModel)jTable3.getModel();
                DefaultTableModel model2 = (DefaultTableModel)product_table.getModel();
                DefaultTableModel model3 = (DefaultTableModel)jTable5.getModel();
                
                int num=  JOptionPane.showConfirmDialog(null, "Are you sure "+message+"?");
           
                if(num==0){
                    model1.setRowCount(0); //clear old data on table 
                    cg.show_Category(); //get data from database (new data after delete)
                    cg.categoryAutoID();
                
                    model2.setRowCount(0);
                    pd.productAutoID();
                    pd.show_Product();
                    
                    model3.setRowCount(0);
                    sf.clearStaffTableData();
                    sf.show_Staff();
                    SignUpScreen sus = new SignUpScreen();
                    sus.StaffAutoID();
                    
                    txtcategoryname.setText(" ");
                
                    JOptionPane.showMessageDialog(null, "Data "+message+" Succefully");
                }else{
               
                }
         
                
           }else{//if table not select row
               JOptionPane.showMessageDialog(null, "Data Not "+message);
           }
       }catch(Exception ex){
           ex.printStackTrace();
       }
   }


    private void textField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField2ActionPerformed

    private void historysearch_textfield2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historysearch_textfield2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_historysearch_textfield2ActionPerformed

    private void category_dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_dashboardMouseClicked
        // TODO add your handling code here:
          tappane.setSelectedIndex(1);
    }//GEN-LAST:event_category_dashboardMouseClicked

    private void category_paneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_paneMouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(1);
    }//GEN-LAST:event_category_paneMouseClicked

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
            tappane.setSelectedIndex(2);
    }//GEN-LAST:event_jPanel5MouseClicked

    private void Product_DashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Product_DashboardMouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(2);
    }//GEN-LAST:event_Product_DashboardMouseClicked

    private void History_Dashboard2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_History_Dashboard2MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(3);
    }//GEN-LAST:event_History_Dashboard2MouseClicked

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(3);
    }//GEN-LAST:event_jPanel8MouseClicked

    private void History_Dashboard3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_History_Dashboard3MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(4);
    }//GEN-LAST:event_History_Dashboard3MouseClicked

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(4);
    }//GEN-LAST:event_jPanel9MouseClicked

    private void History_DashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_History_DashboardMouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(5);
    }//GEN-LAST:event_History_DashboardMouseClicked

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(5);
    }//GEN-LAST:event_jPanel6MouseClicked

    private void staff_dashboard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_dashboard1MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(6);
    }//GEN-LAST:event_staff_dashboard1MouseClicked

    private void panestaff_dashboard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panestaff_dashboard1MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(6);
    }//GEN-LAST:event_panestaff_dashboard1MouseClicked
    
    
    
    private void category_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_addActionPerformed
            
        //String query = "INSERT INTO Category(CategoryNo, CategoryName) VALUES ('"+lblCategoryNo.getText()+"','"+txtcategoryname.getText()+"')";
        //executeSQlQuery_Category(query, "Inserted");
        
        try{
                            
            con =  DriverManager.getConnection(URL , user , pass);
            st=con.createStatement();  

            String cno = lblCategoryNo.getText();
            String cname = txtcategoryname.getText();
                  
            String insertQuery="insert into Category (CategoryNo, CategoryName) values (?, ?)";
                  
            pst = con.prepareStatement (insertQuery);
                  
            String selectQuery = "select * from Category WHERE CategoryName='" +cname+ "' ";
            rs = st.executeQuery(selectQuery);
                  
            if(rs.next()){
                JOptionPane.showMessageDialog(null, cname+ " is Already Have.");
                txtcategoryname.setText(" ");
                
            }else{
                      
                if(cname.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Category is empty.");
                    
                }else{
                    int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'Add'?");
           
                    if(num==0){
                        pst.setString(1, cno);
                        pst.setString(2, cname);
                  
                        pst.executeUpdate();
                  
                        JOptionPane.showMessageDialog(null,"Insert Data successfully");
                        
                        jComboBox1.setSelectedIndex(0);
                        //get data from sql to comboBox
                        pd.getDataIntoCombobox();
                        
                        //autoID
                        cg.categoryAutoID();

                        //clear data in jtable
                        //cg.clearTableCategory();

                        //get data from sql
                        //cg.show_Category();

                        //Add data from Jtextfield to Table
                        DefaultTableModel model = (DefaultTableModel)jTable3.getModel();
                        model.addRow(new Object[] {cno, cname});

                        txtcategoryname.setText(" ");                     
                    }else{
                        txtcategoryname.setText(" ");
                        cg.categoryAutoID();                   
                    }        
                    
                }
                        
            }
                  
                  
                            
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
      
    }//GEN-LAST:event_category_addActionPerformed

    private void History_Dashboard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_History_Dashboard1MouseClicked
        // TODO add your handling code here:
        
        int num=  JOptionPane.showConfirmDialog(null, "Are you Login?");
           
        if(num==0){
             
            LoginScreen ls = new LoginScreen();
                ls.setVisible(true);
                ls.setLocationRelativeTo(null);
                this.setVisible(false);
                    
        }else{
               
        }
        
    }//GEN-LAST:event_History_Dashboard1MouseClicked

    private void category_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_updateActionPerformed
        // TODO add your handling code here:
        
        String query = "UPDATE Category SET CategoryName='"+txtcategoryname.getText()+"' WHERE CategoryNo = "+lblCategoryNo.getText();
        executeSQlQuery_Category(query, "Updated");
        
        pd.clearDataCombo(); //clear data in product combo
        pd.getDataIntoCombobox(); //get data from sql into combobox (product)
        
     
    }//GEN-LAST:event_category_updateActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        
        //Update
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        int selectedRow = jTable3.getSelectedRow();

        lblCategoryNo.setText(model.getValueAt(selectedRow, 0).toString());
        txtcategoryname.setText(model.getValueAt(selectedRow, 1).toString());
        
        
    }//GEN-LAST:event_jTable3MouseClicked

    private void category_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_deleteActionPerformed
        // TODO add your handling code here:
        
        try{
                          
            con =  DriverManager.getConnection(URL , user , pass);
            st=con.createStatement();  
                            
            String cno = lblCategoryNo.getText();
                            
            String selectQuery = "SELECT * FROM Category";
            rs = st.executeQuery(selectQuery);
                            
            if(jTable3.getSelectedRow() != -1){ //if row is select
                                     
                if(rs.next()){
                    int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'delete'?");
           
                    if(num==0){
                        String deletequery1 = "DELETE FROM Product WHERE CategoryNo="+cno;
                        st.executeUpdate(deletequery1);//delete primary key last
                        
                        String deleteQuery="DELETE FROM Category WHERE CategoryNo="+cno;
                        st.executeUpdate(deleteQuery);//delete primary key last
                        
                        cg.clearTableCategory();//clear data in table category
                        cg.show_Category();//get data from Category (sql)
                        cg.categoryAutoID(); //autoId 
                        
                        pd.clearProductTableData();//clear data in table Product
                        pd.show_Product();//get data from Product (sql)
                                            
                        txtcategoryname.setText("");
                        
                        pd.clearDataCombo(); //clear data in product combo
                        pd.getDataIntoCombobox(); //get data from sql into combobox (product)
                         
                        JOptionPane.showMessageDialog(null,"Delete Successfully.");
                                            
                    }else{
                        txtcategoryname.setText(" ");
                        cg.categoryAutoID();
                    }        
                                            
                                     
                }else{
                    JOptionPane.showMessageDialog(null,"Data Don't Have In Table.");
                }
                                     
            }else{ //if row is not select
                                
                JOptionPane.showMessageDialog(null,"Please Click On Record.");
            }
                            

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
    }//GEN-LAST:event_category_deleteActionPerformed

    private void categorysearch_textfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categorysearch_textfieldKeyReleased
        // TODO add your handling code here:
        
        DefaultTableModel table = (DefaultTableModel) jTable3.getModel();
        String search = categorysearch_textfield.getText().toUpperCase();
        TableRowSorter <DefaultTableModel> tr = new TableRowSorter <DefaultTableModel> (table);
        jTable3.setRowSorter(tr);
        tr.setRowFilter (RowFilter.regexFilter (search));
        
    }//GEN-LAST:event_categorysearch_textfieldKeyReleased

    private void category_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_resetActionPerformed
        // TODO add your handling code here:
            cg.categoryAutoID();
            txtcategoryname.setText(" ");
    }//GEN-LAST:event_category_resetActionPerformed

    private void panestaff_dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panestaff_dashboardMouseClicked
        // TODO add your handling code here:
        SignUpScreen sup = new SignUpScreen();
        sup.setVisible(true);
        sup.setLocationRelativeTo(null);
        sup.StaffAutoID();
        sup.signup_lblsignin.setVisible(false);
        sup.jLabel8.setVisible(true);
        
    }//GEN-LAST:event_panestaff_dashboardMouseClicked

    private void staff_dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_dashboardMouseClicked
        // TODO add your handling code here:
        SignUpScreen sup = new SignUpScreen();
        sup.setVisible(true);
        sup.setLocationRelativeTo(null);
        sup.StaffAutoID();
        sup.signup_lblsignin.setVisible(false);
        sup.jLabel8.setVisible(true);
    }//GEN-LAST:event_staff_dashboardMouseClicked

    private void categorysearch_textfield1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categorysearch_textfield1KeyReleased
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) jTable5.getModel();
        String search = categorysearch_textfield1.getText().toLowerCase();
        TableRowSorter <DefaultTableModel> tr = new TableRowSorter <DefaultTableModel> (table);
        jTable5.setRowSorter(tr);
        tr.setRowFilter (RowFilter.regexFilter (search));
    }//GEN-LAST:event_categorysearch_textfield1KeyReleased

    private void product_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_addActionPerformed
        // TODO add your handling code here:
        
        try{
                            
            con =  DriverManager.getConnection(URL , user , pass);
            st=con.createStatement();  

            String pno = productno_textfield.getText();
            String pname = productname_textfield.getText();
            String cno = productcategoryno_textfield.getText();
            String punitprice = productunitprice_textfield.getText();
            String psellingprice = productsellingprice_textfield.getText();
            String pquantity = productquantity_textfield.getText();
            String preceivingdate = productrecevingdate_textfield.getText();
            String pexpiredate = productexpiredate_textfield.getText();
            
                  
            String insertQuery="insert into Product (ProductNo, ProductName, CategoryNo, UnitPrice, SellingPrice, Quantity, ReceivingDate, Expire_Date) values (?, ?, ?, ?, ?, ?, ?, ?)";
                  
            pst = con.prepareStatement (insertQuery);
                  
            String selectQuery = "select * from Product WHERE ProductName='" +pname+ "' ";
            rs = st.executeQuery(selectQuery);
                  
            if(rs.next()){ // if product name is dumplicate
                JOptionPane.showMessageDialog(null, pname+ " is Already Have.");
                
            }else{
                
                String selectQueryCategory = "select * from Category WHERE CategoryNo='" +cno+ "' ";
                ResultSet rs1 = st.executeQuery(selectQueryCategory);
                
                if(rs1.next()){ //if Category No have in table Category
                    
                    if(pname.isEmpty()){//if Product Name is not complete
                        JOptionPane.showMessageDialog(null,"Product is empty.");

                    }else 
                    if(cno.isEmpty()){//if Category No is not empty
                        JOptionPane.showMessageDialog(null,"CategoryNo is empty.");

                    }else
                    if(punitprice.isEmpty()){//if unit price is not complete
                        JOptionPane.showMessageDialog(null,"UnitPrice is empty.");

                    }else
                    if(psellingprice.isEmpty()){//if selling price is not complete
                        JOptionPane.showMessageDialog(null,"Selling Price is empty.");

                    }else
                    if(pquantity.isEmpty()){//if quantity is not complete
                        JOptionPane.showMessageDialog(null,"Quantity is empty.");

                    }else
                    if(preceivingdate.isEmpty()){//if receiving date is not complete
                        JOptionPane.showMessageDialog(null,"Receiving Date is empty.");

                    }else
                    if(pexpiredate.isEmpty()){//if expire date is not complete
                        JOptionPane.showMessageDialog(null,"Expire Date is empty.");

                    }else{//if all textfield is complete
                        int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'Add'?");

                        if(num==0){ //if click "yes"
                            pst.setString(1, pno);
                            pst.setString(2, pname);
                            pst.setString(3, cno);
                            pst.setString(4, punitprice);
                            pst.setString(5, psellingprice);
                            pst.setString(6, pquantity);
                            pst.setString(7, preceivingdate);
                            pst.setString(8, pexpiredate);

                            pst.executeUpdate();//update into database

                            JOptionPane.showMessageDialog(null,"Insert Data successfully");

                            //Add data from Jtextfield to Table
                            DefaultTableModel model = (DefaultTableModel)product_table.getModel();
                            model.addRow(new Object[] {pno, pname, cno, punitprice, psellingprice, pquantity, preceivingdate, pexpiredate  });

                            //pd.clearProductTableData();
                            //pd.show_Product();

                            pd.setProductEmpty();

                        }else{ //If click "No"
                            pd.setProductEmpty();
                        }        
                
                    }    
                
                }else{//if category don't have in table Category
                    JOptionPane.showMessageDialog(null," CategoryNo ("+cno+") don't have");
                }
            }
            
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
      
                                   
    }//GEN-LAST:event_product_addActionPerformed

    private void product_tableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_product_tableKeyReleased
        // TODO add your handling code here:
        //Update
        
    }//GEN-LAST:event_product_tableKeyReleased

    private void product_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_product_tableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) product_table.getModel();
        int selectedRow = product_table.getSelectedRow();

        productno_textfield.setText(model.getValueAt(selectedRow, 0).toString());
        productname_textfield.setText(model.getValueAt(selectedRow, 1).toString());
        productcategoryno_textfield.setText(model.getValueAt(selectedRow, 2).toString());
        productunitprice_textfield.setText(model.getValueAt(selectedRow, 3).toString());
        productsellingprice_textfield.setText(model.getValueAt(selectedRow, 4).toString());
        productquantity_textfield.setText(model.getValueAt(selectedRow, 5).toString());
        productrecevingdate_textfield.setText(model.getValueAt(selectedRow, 6).toString());
        productexpiredate_textfield.setText(model.getValueAt(selectedRow, 7).toString());
    }//GEN-LAST:event_product_tableMouseClicked

    private void product_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_updateActionPerformed
        // TODO add your handling code here:
        String query = "UPDATE Product SET ProductName='"+productname_textfield.getText()+"', CategoryNo='"+productcategoryno_textfield.getText()+"', UnitPrice='"+productunitprice_textfield.getText()+"', SellingPrice='"+productsellingprice_textfield.getText()+"', Quantity='"+productquantity_textfield.getText()+"', ReceivingDate='"+productrecevingdate_textfield.getText()+"', Expire_Date='"+productexpiredate_textfield.getText()+"' WHERE ProductNo = "+productno_textfield.getText();
        executeSQlQuery_Category(query, "Updated");
    }//GEN-LAST:event_product_updateActionPerformed

    private void productsearch_textfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productsearch_textfieldKeyReleased
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) product_table.getModel();
        String search = productsearch_textfield.getText().toUpperCase();
        TableRowSorter <DefaultTableModel> tr = new TableRowSorter <DefaultTableModel> (table);
        product_table.setRowSorter(tr);
        tr.setRowFilter (RowFilter.regexFilter (search));
    }//GEN-LAST:event_productsearch_textfieldKeyReleased

    private void product_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_resetActionPerformed
        // TODO add your handling code here:
        pd.setProductEmpty();
    }//GEN-LAST:event_product_resetActionPerformed

    private void product_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_deleteActionPerformed
        // TODO add your handling code here:
        String query = "DELETE FROM Product WHERE ProductNo = "+productno_textfield.getText();
        
        executeSQlQuery_Category(query, "Delete");
        
        pd.setProductEmpty();
    }//GEN-LAST:event_product_deleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        pd.clearProductTableData();
        pd.show_Product();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
        try{
                            
            con =  DriverManager.getConnection(URL , user , pass);
            st=con.createStatement();  
            
            String selectValue = jComboBox1.getSelectedItem().toString();
            String selectQuery = "select CategoryNo from Category WHERE CategoryName='" +selectValue+ "' ";
            rs = st.executeQuery(selectQuery);
            
            if(rs.next()){
                String cno = rs.getString("CategoryNo");
                productcategoryno_textfield.setText(cno);
                
            }else{
                
                JOptionPane.showMessageDialog(null," Don't Have");
                    
            }
            
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        SignUpScreen hs = new SignUpScreen();
        
        String query = "DELETE FROM Staff WHERE StaffID = "+jLabel18.getText();
        
        executeSQlQuery_Category(query, "Delete");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        // TODO add your handling code here:
        TableModel model = jTable5.getModel();
        int selectedRow = jTable5.getSelectedRow();
        
        jLabel18.setText(model.getValueAt(selectedRow, 0).toString());
      
    }//GEN-LAST:event_jTable5MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        sf.clearStaffTableData();
        sf.show_Staff();
    }//GEN-LAST:event_jButton4ActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DashBoard1;
    private javax.swing.JLabel History_Dashboard;
    private javax.swing.JLabel History_Dashboard1;
    private javax.swing.JLabel History_Dashboard2;
    private javax.swing.JLabel History_Dashboard3;
    private javax.swing.JLabel Product_Dashboard;
    private javax.swing.JButton category_add;
    private javax.swing.JLabel category_dashboard;
    private javax.swing.JButton category_delete;
    private javax.swing.JPanel category_pane;
    private javax.swing.JButton category_reset;
    private javax.swing.JTextField category_txterror;
    private javax.swing.JButton category_update;
    private javax.swing.JTextField categorysearch_textfield;
    private javax.swing.JTextField categorysearch_textfield1;
    private javax.swing.JTextField historyinvoiceno_textfield1;
    private javax.swing.JTextField historyinvoiceno_textfield2;
    private javax.swing.JTextField historyinvoiceno_textfield3;
    private javax.swing.JTextField historyinvoiceno_textfield4;
    private javax.swing.JTextField historyinvoiceno_textfield5;
    private javax.swing.JTextField historysearch_textfield;
    private javax.swing.JTextField historysearch_textfield1;
    private javax.swing.JTextField historysearch_textfield2;
    private javax.swing.JButton historyshowlist_textfield10;
    private javax.swing.JButton historyshowlist_textfield11;
    private javax.swing.JButton historyshowlist_textfield6;
    private javax.swing.JButton historyshowlist_textfield8;
    private javax.swing.JButton historyshowlist_textfield9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    protected javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    public javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel lblCategoryNo;
    private javax.swing.JPanel panestaff_dashboard;
    private javax.swing.JPanel panestaff_dashboard1;
    private javax.swing.JPanel panestaff_dashboard2;
    private javax.swing.JButton product_add;
    private javax.swing.JButton product_delete;
    private javax.swing.JButton product_reset;
    private javax.swing.JTable product_table;
    private javax.swing.JButton product_update;
    private javax.swing.JTextField productcategoryno_textfield;
    private javax.swing.JTextField productexpiredate_textfield;
    private javax.swing.JTextField productname_textfield;
    private javax.swing.JTextField productno_textfield;
    private javax.swing.JTextField productno_textfield1;
    private javax.swing.JTextField productquantity_textfield;
    private javax.swing.JTextField productrecevingdate_textfield;
    private javax.swing.JTextField productsearch_textfield;
    private javax.swing.JTextField productsellingprice_textfield;
    private javax.swing.JTextField productunitprice_textfield;
    private javax.swing.JLabel staff_dashboard;
    private javax.swing.JLabel staff_dashboard1;
    private javax.swing.JLabel staff_dashboard2;
    private javax.swing.JTabbedPane tappane;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    private javax.swing.JTextField txtcategoryname;
    // End of variables declaration//GEN-END:variables

}
