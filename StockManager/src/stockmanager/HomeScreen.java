/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package stockmanager;

/**
 *
 * @author ASUS
 */

import com.toedter.calendar.JDateChooser;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;


public class HomeScreen extends javax.swing.JFrame {

        Connection con = null;
        ResultSet rs = null;
        PreparedStatement pst = null;
        Statement st = null;
        
        //String URL = "jdbc:sqlserver://127.0.0.1:1433;databaseName=StockManager";
        //String user = "rithy";
        //String pass = "241043";
        
        Category cg = new Category();
        Staff sf = new Staff();
        Product pd = new Product();
        Customer cs = new Customer();
        Invoice iv = new Invoice();
        InvoiceDetail id = new InvoiceDetail();
        
    //Constructors
    public HomeScreen() {
                initComponents();
                
                setLocationRelativeTo(null);
                
                //Category
                cg.categoryAutoID();
                cg.show_Category();
                
               
                //Staff
                sf.staffAutoID();
                sf.show_Staff();
                
                //Product
                pd.productAutoID();
                pd.show_Product();
                pd.getDataIntoCombobox();
                
                //Customer
                cs.show_Customer();
                
                //Invoice
                iv.show_Invoice();
                
                //invoice Detail
                id.show_InDetail();
                
                
                table_InvoiceDetail.setAutoCreateRowSorter(true);
                table_Invoice.setAutoCreateRowSorter(true);
                table_Customer.setAutoCreateRowSorter(true);
                table_Staff.setAutoCreateRowSorter(true);
                table_Product.setAutoCreateRowSorter(true);
                table_Category.setAutoCreateRowSorter(true);
             
    }
    
         

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        Product_Dashboard = new javax.swing.JLabel();
        category_pane = new javax.swing.JPanel();
        category_dashboard = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        History_Dashboard = new javax.swing.JLabel();
        DashBoard1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        History_Dashboard2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        History_Dashboard3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        History_Dashboard1 = new javax.swing.JLabel();
        panestaff_dashboard = new javax.swing.JPanel();
        staff_dashboard = new javax.swing.JLabel();
        panestaff_dashboard1 = new javax.swing.JPanel();
        staff_dashboard1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tappane = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        category_update = new javax.swing.JButton();
        category_add = new javax.swing.JButton();
        category_reset = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        categorysearch_textfield = new javax.swing.JTextField();
        category_txterror = new javax.swing.JTextField();
        txtcategoryname = new javax.swing.JTextField();
        lblCategoryNo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Category = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        productsearch_textfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        productno_textfield = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        text_pName = new javax.swing.JTextField();
        text_pCNo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        text_unitPrice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        text_pSellingPrice = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        text_pQuantity = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        product_delete = new javax.swing.JButton();
        product_update = new javax.swing.JButton();
        product_add = new javax.swing.JButton();
        product_reset = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        calender_receivingDate = new com.toedter.calendar.JDateChooser();
        calender_expireDate = new com.toedter.calendar.JDateChooser();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_Product = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        table_Staff = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        productsearch_textfield1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        sID = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        sName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        sPassword = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        sGender = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        sPosition = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        sPhone = new javax.swing.JTextField();
        sAddress = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_Customer = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        text_cusSearch = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        text_cusID = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        text_cusName = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        text_cusGender = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        text_cusPhone = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        text_cusAddress = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox<>();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        table_Invoice = new javax.swing.JTable();
        jLabel57 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        text_iSearch = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel38 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        text_pCNo3 = new javax.swing.JTextField();
        text_pCNo4 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        text_pCNo5 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_InvoiceDetail = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        productno_textfield1 = new javax.swing.JTextField();
        jPanel28 = new javax.swing.JPanel();
        productsearch_textfield4 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton13 = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        text_pCNo2 = new javax.swing.JTextField();
        text_pCNo1 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        text_pCNo6 = new javax.swing.JTextField();
        jComboBox5 = new javax.swing.JComboBox<>();
        text_InvoiceID = new javax.swing.JTextField();
        text_inDetailID = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        category_delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 604));
        setPreferredSize(new java.awt.Dimension(100, 50));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });
        jPanel5.setLayout(new java.awt.GridBagLayout());

        Product_Dashboard.setForeground(new java.awt.Color(255, 255, 255));
        Product_Dashboard.setText("Product");
        Product_Dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Product_DashboardMouseClicked(evt);
            }
        });
        jPanel5.add(Product_Dashboard, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 226, 204, 46));

        category_pane.setBackground(new java.awt.Color(102, 102, 102));
        category_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_paneMouseClicked(evt);
            }
        });
        category_pane.setLayout(new java.awt.GridBagLayout());

        category_dashboard.setForeground(new java.awt.Color(255, 255, 255));
        category_dashboard.setText("Category");
        category_dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_dashboardMouseClicked(evt);
            }
        });
        category_pane.add(category_dashboard, new java.awt.GridBagConstraints());

        jPanel1.add(category_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 204, 46));

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });
        jPanel6.setLayout(new java.awt.GridBagLayout());

        History_Dashboard.setForeground(new java.awt.Color(255, 255, 255));
        History_Dashboard.setText("Invoice");
        History_Dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                History_DashboardMouseClicked(evt);
            }
        });
        jPanel6.add(History_Dashboard, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 204, 46));

        DashBoard1.setBackground(new java.awt.Color(36, 29, 29));
        DashBoard1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_home_26px_1.png"))); // NOI18N
        DashBoard1.add(jLabel3, new java.awt.GridBagConstraints());

        jPanel1.add(DashBoard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 136, 204, 46));

        jPanel8.setBackground(new java.awt.Color(102, 102, 102));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });
        jPanel8.setLayout(new java.awt.GridBagLayout());

        History_Dashboard2.setForeground(new java.awt.Color(255, 255, 255));
        History_Dashboard2.setText("Staff");
        History_Dashboard2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                History_Dashboard2MouseClicked(evt);
            }
        });
        jPanel8.add(History_Dashboard2, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 204, 46));

        jPanel9.setBackground(new java.awt.Color(102, 102, 102));
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
        });
        jPanel9.setLayout(new java.awt.GridBagLayout());

        History_Dashboard3.setForeground(new java.awt.Color(255, 255, 255));
        History_Dashboard3.setText("Customer");
        History_Dashboard3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                History_Dashboard3MouseClicked(evt);
            }
        });
        jPanel9.add(History_Dashboard3, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 204, 46));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("     Lay Rithy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 53, 12, 55);
        jPanel3.add(jLabel1, gridBagConstraints);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_home_50px.png"))); // NOI18N
        jPanel3.add(jLabel2, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 28, -1, 97));

        History_Dashboard1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        History_Dashboard1.setForeground(new java.awt.Color(255, 255, 255));
        History_Dashboard1.setText("Log Out");
        History_Dashboard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                History_Dashboard1MouseClicked(evt);
            }
        });
        jPanel1.add(History_Dashboard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        panestaff_dashboard.setBackground(new java.awt.Color(102, 102, 102));
        panestaff_dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panestaff_dashboardMouseClicked(evt);
            }
        });
        panestaff_dashboard.setLayout(new java.awt.GridBagLayout());

        staff_dashboard.setForeground(new java.awt.Color(255, 255, 255));
        staff_dashboard.setText("Create Account");
        staff_dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staff_dashboardMouseClicked(evt);
            }
        });
        panestaff_dashboard.add(staff_dashboard, new java.awt.GridBagConstraints());

        jPanel1.add(panestaff_dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 204, 46));

        panestaff_dashboard1.setBackground(new java.awt.Color(102, 102, 102));
        panestaff_dashboard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panestaff_dashboard1MouseClicked(evt);
            }
        });
        panestaff_dashboard1.setLayout(new java.awt.GridBagLayout());

        staff_dashboard1.setForeground(new java.awt.Color(255, 255, 255));
        staff_dashboard1.setText("History");
        staff_dashboard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staff_dashboard1MouseClicked(evt);
            }
        });
        panestaff_dashboard1.add(staff_dashboard1, new java.awt.GridBagConstraints());

        jPanel1.add(panestaff_dashboard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 204, 46));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 850));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(2546, 514));

        jPanel19.setBackground(new java.awt.Color(153, 153, 153));
        jPanel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel19MouseClicked(evt);
            }
        });

        jPanel32.setBackground(new java.awt.Color(153, 153, 153));
        jPanel32.setLayout(new java.awt.GridBagLayout());

        jLabel42.setBackground(new java.awt.Color(0, 0, 0));
        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel42.setText("Staff");
        jLabel42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel42MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel32.add(jLabel42, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel19Layout = new org.jdesktop.layout.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel32, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel19Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel20.setBackground(new java.awt.Color(153, 153, 153));
        jPanel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel20MouseClicked(evt);
            }
        });

        jPanel31.setBackground(new java.awt.Color(153, 153, 153));
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jLabel41.setBackground(new java.awt.Color(0, 0, 0));
        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel41.setText("Customer");
        jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel41MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel31.add(jLabel41, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel20Layout = new org.jdesktop.layout.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel31, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel20Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel21.setBackground(new java.awt.Color(153, 153, 153));
        jPanel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel21MouseClicked(evt);
            }
        });

        jPanel30.setBackground(new java.awt.Color(153, 153, 153));
        jPanel30.setLayout(new java.awt.GridBagLayout());

        jLabel40.setBackground(new java.awt.Color(0, 0, 0));
        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel40.setText("Product");
        jLabel40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel40MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel30.add(jLabel40, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel21Layout = new org.jdesktop.layout.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel30, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel21Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel22.setBackground(new java.awt.Color(153, 153, 153));
        jPanel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel22MouseClicked(evt);
            }
        });

        jPanel29.setBackground(new java.awt.Color(153, 153, 153));
        jPanel29.setLayout(new java.awt.GridBagLayout());

        jLabel30.setBackground(new java.awt.Color(0, 0, 0));
        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel30.setText("Category");
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel29.add(jLabel30, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel22Layout = new org.jdesktop.layout.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel29, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel22Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel23.setBackground(new java.awt.Color(153, 153, 153));
        jPanel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel23MouseClicked(evt);
            }
        });

        jPanel34.setBackground(new java.awt.Color(153, 153, 153));
        jPanel34.setLayout(new java.awt.GridBagLayout());

        jLabel44.setBackground(new java.awt.Color(0, 0, 0));
        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel44.setText("History");
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel34.add(jLabel44, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel23Layout = new org.jdesktop.layout.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel34, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel23Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel24.setBackground(new java.awt.Color(153, 153, 153));
        jPanel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel24MouseClicked(evt);
            }
        });

        jPanel33.setBackground(new java.awt.Color(153, 153, 153));
        jPanel33.setLayout(new java.awt.GridBagLayout());

        jLabel43.setBackground(new java.awt.Color(0, 0, 0));
        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel43.setText("Invoice");
        jLabel43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel43MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 85, 40, 93);
        jPanel33.add(jLabel43, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel24Layout = new org.jdesktop.layout.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel33, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel24Layout.createSequentialGroup()
                .add(0, 143, Short.MAX_VALUE)
                .add(jPanel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(35, 35, 35)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel22, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel19, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(49, 49, 49)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(54, 54, 54)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10460, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(55, 55, 55)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(61, 61, 61)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        tappane.addTab("Home", jPanel4);

        jPanel15.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Category No:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Category Name:");

        category_update.setBackground(new java.awt.Color(102, 102, 102));
        category_update.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        category_update.setForeground(new java.awt.Color(255, 255, 255));
        category_update.setText("Update");
        category_update.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        category_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_updateActionPerformed(evt);
            }
        });

        category_add.setBackground(new java.awt.Color(102, 102, 102));
        category_add.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        category_add.setForeground(new java.awt.Color(255, 255, 255));
        category_add.setText("Add");
        category_add.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        category_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_addActionPerformed(evt);
            }
        });

        category_reset.setBackground(new java.awt.Color(102, 102, 102));
        category_reset.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        category_reset.setForeground(new java.awt.Color(255, 255, 255));
        category_reset.setText("Reset");
        category_reset.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        category_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_resetActionPerformed(evt);
            }
        });

        jLabel6.setText("Search");

        categorysearch_textfield.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        categorysearch_textfield.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        categorysearch_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categorysearch_textfieldKeyReleased(evt);
            }
        });

        category_txterror.setBackground(new java.awt.Color(204, 204, 204));
        category_txterror.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        category_txterror.setForeground(new java.awt.Color(255, 0, 0));
        category_txterror.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        txtcategoryname.setBackground(new java.awt.Color(204, 204, 204));
        txtcategoryname.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtcategoryname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblCategoryNo.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblCategoryNo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel15Layout = new org.jdesktop.layout.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel15Layout.createSequentialGroup()
                        .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, category_txterror)
                            .add(jPanel15Layout.createSequentialGroup()
                                .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(categorysearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE)))
                        .add(23, 23, 23))
                    .add(jPanel15Layout.createSequentialGroup()
                        .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel15Layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txtcategoryname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 293, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel15Layout.createSequentialGroup()
                                .add(jLabel4)
                                .add(18, 18, 18)
                                .add(lblCategoryNo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
            .add(jPanel15Layout.createSequentialGroup()
                .add(94, 94, 94)
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(category_reset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(category_update, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(category_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel15Layout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(categorysearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel15Layout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(jLabel4))
                    .add(jPanel15Layout.createSequentialGroup()
                        .add(23, 23, 23)
                        .add(lblCategoryNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(category_txterror, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel5)
                    .add(txtcategoryname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(32, 32, 32)
                .add(category_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(category_update, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(category_reset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table_Category.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category No", "Category Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_Category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_CategoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_Category);

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(jPanel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 278, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(152, 152, 152)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10508, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel15, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel10Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        tappane.addTab("Category", jPanel10);

        jPanel16.setBackground(new java.awt.Color(204, 204, 204));
        jPanel16.setPreferredSize(new java.awt.Dimension(340, 543));

        jLabel7.setText("Search:");

        productsearch_textfield.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productsearch_textfield.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productsearch_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productsearch_textfieldKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("Product No. :");

        productno_textfield.setBackground(new java.awt.Color(204, 204, 204));
        productno_textfield.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        productno_textfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("Product Name: ");

        text_pName.setBackground(new java.awt.Color(204, 204, 204));
        text_pName.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        text_pCNo.setBackground(new java.awt.Color(204, 204, 204));
        text_pCNo.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pCNo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel10.setText("Category No. :");

        text_unitPrice.setBackground(new java.awt.Color(204, 204, 204));
        text_unitPrice.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_unitPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel11.setText("Unit Price :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel12.setText("Selling Price :");

        text_pSellingPrice.setBackground(new java.awt.Color(204, 204, 204));
        text_pSellingPrice.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pSellingPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel13.setText("Quantity :");

        text_pQuantity.setBackground(new java.awt.Color(204, 204, 204));
        text_pQuantity.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pQuantity.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel14.setText("Receving Date :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel15.setText("Expire Date :");

        product_delete.setBackground(new java.awt.Color(102, 102, 102));
        product_delete.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        product_delete.setForeground(new java.awt.Color(255, 255, 255));
        product_delete.setText("Delete");
        product_delete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        product_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_deleteActionPerformed(evt);
            }
        });

        product_update.setBackground(new java.awt.Color(102, 102, 102));
        product_update.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        product_update.setForeground(new java.awt.Color(255, 255, 255));
        product_update.setText("Update");
        product_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        product_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_updateActionPerformed(evt);
            }
        });

        product_add.setBackground(new java.awt.Color(102, 102, 102));
        product_add.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        product_add.setForeground(new java.awt.Color(255, 255, 255));
        product_add.setText("Add");
        product_add.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        product_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_addActionPerformed(evt);
            }
        });

        product_reset.setBackground(new java.awt.Color(102, 102, 102));
        product_reset.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        product_reset.setForeground(new java.awt.Color(255, 255, 255));
        product_reset.setText("Reset");
        product_reset.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        product_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_resetActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        calender_receivingDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calender_receivingDateMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                calender_receivingDateMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                calender_receivingDateMouseReleased(evt);
            }
        });
        calender_receivingDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calender_receivingDateKeyPressed(evt);
            }
        });

        calender_expireDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calender_expireDateMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                calender_expireDateMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                calender_expireDateMouseReleased(evt);
            }
        });
        calender_expireDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calender_expireDateKeyPressed(evt);
            }
        });

        jTextField2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel16Layout = new org.jdesktop.layout.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(117, 117, 117))
            .add(jPanel16Layout.createSequentialGroup()
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(productsearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 208, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel16Layout.createSequentialGroup()
                                        .add(jLabel8)
                                        .add(34, 34, 34))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel16Layout.createSequentialGroup()
                                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jLabel15)
                                            .add(jLabel14)
                                            .add(jLabel9)
                                            .add(jLabel11)
                                            .add(jLabel12)
                                            .add(jLabel13)
                                            .add(jLabel10))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)))
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(productno_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                                .add(text_pSellingPrice)
                                                .add(text_unitPrice)
                                                .add(text_pQuantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(jPanel16Layout.createSequentialGroup()
                                                .add(text_pCNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, text_pName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 432, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(calender_expireDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(calender_receivingDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(jPanel16Layout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, product_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, product_reset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(51, 51, 51)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(product_update, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(product_delete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(productsearch_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel16Layout.createSequentialGroup()
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, productno_textfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel8))
                        .add(25, 25, 25)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jLabel9)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel10)
                                .add(19, 19, 19)
                                .add(jLabel11)
                                .add(18, 18, 18)
                                .add(jLabel12)
                                .add(18, 18, 18)
                                .add(jLabel13)
                                .add(18, 18, 18)
                                .add(jLabel14))
                            .add(calender_receivingDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(5, 5, 5)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel15)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, calender_expireDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(28, 28, 28)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(product_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(product_update, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(14, 14, 14)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(product_reset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(product_delete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel16Layout.createSequentialGroup()
                        .add(37, 37, 37)
                        .add(text_pName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(text_pCNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(16, 16, 16)
                        .add(text_unitPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(text_pSellingPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(text_pQuantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table_Product.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product No", "Product Name", "Category No", "UnitPrice", "Selling Price", "Quantity", "Receving Date", "Expire Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_Product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_ProductMouseClicked(evt);
            }
        });
        table_Product.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_ProductKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(table_Product);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Refresh Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel11Layout = new org.jdesktop.layout.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11Layout.createSequentialGroup()
                .add(jPanel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 302, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(27, 27, 27)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 181, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 636, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10425, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
            .add(jPanel11Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 429, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(20, 20, 20)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tappane.addTab("Product", jPanel11);

        table_Staff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Staff ID", "Staff Name", "Staff Password", "Staff Gender", "Staff Position", "Staff Phone", "Staff Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_Staff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_StaffMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(table_Staff);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton4.setText("Refresh Table");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel17Layout = new org.jdesktop.layout.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 220, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 153, Short.MAX_VALUE)
        );

        jPanel37.setBackground(new java.awt.Color(204, 204, 204));

        jLabel33.setText("Search :");

        productsearch_textfield1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productsearch_textfield1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productsearch_textfield1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productsearch_textfield1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productsearch_textfield1KeyReleased(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel19.setText("Staff ID:");

        sID.setBackground(new java.awt.Color(204, 204, 204));
        sID.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel20.setText("Staff Name:");

        sName.setBackground(new java.awt.Color(204, 204, 204));
        sName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel21.setText("Password: ");

        sPassword.setBackground(new java.awt.Color(204, 204, 204));
        sPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel22.setText("Gender:");

        sGender.setBackground(new java.awt.Color(204, 204, 204));
        sGender.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sGender.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel23.setText("Position:");

        sPosition.setBackground(new java.awt.Color(204, 204, 204));
        sPosition.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sPosition.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel24.setText("PhoneNo:");

        sPhone.setBackground(new java.awt.Color(204, 204, 204));
        sPhone.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sPhone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        sAddress.setBackground(new java.awt.Color(204, 204, 204));
        sAddress.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel25.setText("Address:");

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(102, 102, 102));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Update");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(102, 102, 102));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Add");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(102, 102, 102));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Reset");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel37Layout = new org.jdesktop.layout.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel37Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel37Layout.createSequentialGroup()
                        .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel37Layout.createSequentialGroup()
                                .add(jLabel23)
                                .add(41, 41, 41)
                                .add(sPosition, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 385, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel37Layout.createSequentialGroup()
                                .add(jLabel22)
                                .add(42, 42, 42)
                                .add(sGender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 261, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel37Layout.createSequentialGroup()
                            .add(jLabel21)
                            .add(23, 23, 23)
                            .add(sPassword)
                            .addContainerGap())
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel37Layout.createSequentialGroup()
                            .add(jLabel24)
                            .add(31, 31, 31)
                            .add(sPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 286, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel37Layout.createSequentialGroup()
                            .add(jLabel25)
                            .add(37, 37, 37)
                            .add(sAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 271, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel37Layout.createSequentialGroup()
                            .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(37, 37, 37)
                            .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jButton9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel37Layout.createSequentialGroup()
                            .add(jLabel20)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                            .add(sName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel37Layout.createSequentialGroup()
                            .add(jLabel19)
                            .add(37, 37, 37)
                            .add(sID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 313, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel37Layout.createSequentialGroup()
                            .add(3, 3, 3)
                            .add(jLabel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(productsearch_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel37Layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(productsearch_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel33))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 42, Short.MAX_VALUE)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel19)
                    .add(sID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(15, 15, 15)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel20))
                .add(22, 22, 22)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel21)
                    .add(sPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel22)
                    .add(sGender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel23)
                    .add(sPosition, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel24)
                    .add(sPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel25)
                    .add(sAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(47, 47, 47)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(23, 23, 23)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(44, 44, 44))
        );

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jPanel37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 299, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(228, 228, 228)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 637, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 2127, Short.MAX_VALUE)
                .add(jPanel17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8078, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(95, 95, 95)
                        .add(jPanel17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(28, 28, 28)
                        .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 407, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tappane.addTab("Staff", jPanel7);

        table_Customer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cus ID", "Cus Name", "Cus Gender", "CUs Phone", "Cus Address"
            }
        ));
        table_Customer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_CustomerMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table_Customer);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton3.setText("Refresh Table");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel18Layout = new org.jdesktop.layout.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 214, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        jPanel26.setBackground(new java.awt.Color(204, 204, 204));

        jLabel16.setText("Search :");

        text_cusSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        text_cusSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        text_cusSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_cusSearchActionPerformed(evt);
            }
        });
        text_cusSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_cusSearchKeyReleased(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel31.setText("Cus ID:");

        text_cusID.setBackground(new java.awt.Color(204, 204, 204));
        text_cusID.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_cusID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel32.setText("Name:");

        text_cusName.setBackground(new java.awt.Color(204, 204, 204));
        text_cusName.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_cusName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel34.setText("Gender:");

        text_cusGender.setBackground(new java.awt.Color(204, 204, 204));
        text_cusGender.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_cusGender.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel35.setText("Phone:");

        text_cusPhone.setBackground(new java.awt.Color(204, 204, 204));
        text_cusPhone.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_cusPhone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel36.setText("Address:");

        text_cusAddress.setBackground(new java.awt.Color(204, 204, 204));
        text_cusAddress.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_cusAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton10.setText("Update");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CusID", "CusName", "CusAddress", "CusGender" }));
        jComboBox4.setMinimumSize(new java.awt.Dimension(114, 30));

        org.jdesktop.layout.GroupLayout jPanel26Layout = new org.jdesktop.layout.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel26Layout.createSequentialGroup()
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(jLabel32)
                        .add(37, 37, 37)
                        .add(text_cusName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 301, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(jLabel34)
                        .add(29, 29, 29)
                        .add(text_cusGender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(jLabel35)
                        .add(36, 36, 36)
                        .add(text_cusPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 358, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(jLabel36)
                        .add(24, 24, 24)
                        .add(text_cusAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 343, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel26Layout.createSequentialGroup()
                        .add(44, 44, 44)
                        .add(jButton5)
                        .add(18, 18, 18)
                        .add(jButton10))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel26Layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel26Layout.createSequentialGroup()
                                .add(jLabel31)
                                .add(31, 31, 31)
                                .add(text_cusID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 407, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel26Layout.createSequentialGroup()
                                .add(jLabel16)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jComboBox4, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(text_cusSearch, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(text_cusSearch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(35, 35, 35)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel31)
                    .add(text_cusID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel32)
                    .add(text_cusName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(16, 16, 16)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel34)
                    .add(text_cusGender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(16, 16, 16)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel35)
                    .add(text_cusPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(16, 16, 16)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel36)
                    .add(text_cusAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(46, 46, 46)
                .add(jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(157, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel12Layout = new org.jdesktop.layout.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .add(jPanel26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(83, 83, 83)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 540, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 3851, Short.MAX_VALUE)
                        .add(jPanel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(6437, Short.MAX_VALUE))
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(jButton3)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .add(76, 76, 76)
                .add(jPanel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jPanel12Layout.createSequentialGroup()
                .add(27, 27, 27)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(39, 39, 39))
            .add(jPanel26, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tappane.addTab("Customer", jPanel12);

        table_Invoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice No", "Invoice Date", "Cus ID", "Staff ID", "Sub Amount", "Discount", "Tax", "Total"
            }
        ));
        table_Invoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_InvoiceMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(table_Invoice);

        jLabel57.setText("Search:");

        org.jdesktop.layout.GroupLayout jPanel25Layout = new org.jdesktop.layout.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        text_iSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        text_iSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        text_iSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_iSearchKeyReleased(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(204, 204, 204));

        jLabel28.setText(" To");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText(" Search Date:");

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel38.setBackground(new java.awt.Color(204, 204, 204));

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel38.setText("CusName:");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel39.setText("StaffName:");

        text_pCNo3.setEditable(false);
        text_pCNo3.setBackground(new java.awt.Color(204, 204, 204));
        text_pCNo3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pCNo3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        text_pCNo4.setBackground(new java.awt.Color(204, 204, 204));
        text_pCNo4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pCNo4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        text_pCNo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_pCNo4ActionPerformed(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel45.setText("InvoiceNo:");

        text_pCNo5.setBackground(new java.awt.Color(204, 204, 204));
        text_pCNo5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pCNo5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        text_pCNo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_pCNo5ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel38Layout = new org.jdesktop.layout.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel38Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel39))
                    .add(jPanel38Layout.createSequentialGroup()
                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel38)
                            .add(jLabel45))
                        .add(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(text_pCNo5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 390, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(text_pCNo4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 390, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(text_pCNo3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 479, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel38Layout.createSequentialGroup()
                .add(0, 13, Short.MAX_VALUE)
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel45)
                    .add(text_pCNo5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(text_pCNo4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel38))
                .add(18, 18, 18)
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(text_pCNo3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel39)))
        );

        org.jdesktop.layout.GroupLayout jPanel13Layout = new org.jdesktop.layout.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel13Layout.createSequentialGroup()
                        .add(jLabel28)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel13Layout.createSequentialGroup()
                        .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jDateChooser3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .add(jDateChooser4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel29)
                            .add(jButton6)
                            .add(jPanel38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, Short.MAX_VALUE))
                        .add(0, 54, Short.MAX_VALUE))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .add(36, 36, 36)
                .add(jLabel29)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDateChooser3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel28)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDateChooser4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton6)
                .add(42, 42, 42)
                .add(jPanel38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton12.setText("Refresh Table");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "InvoiceNo", "CusID", "StaffID", "MaxTotal", "MinTotal" }));
        jComboBox3.setMinimumSize(new java.awt.Dimension(102, 30));
        jComboBox3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jComboBox3MouseDragged(evt);
            }
        });
        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox3MouseClicked(evt);
            }
        });
        jComboBox3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox3KeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel27Layout = new org.jdesktop.layout.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel27Layout.createSequentialGroup()
                .add(jPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(51, 51, 51)
                .add(jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel27Layout.createSequentialGroup()
                        .add(jLabel57)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(text_iSearch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(24, 24, 24)
                        .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 183, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 626, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton12))
                .add(42, 42, 42)
                .add(jPanel25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10319, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel27Layout.createSequentialGroup()
                .add(jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel27Layout.createSequentialGroup()
                        .add(25, 25, 25)
                        .add(jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(text_iSearch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel57)
                            .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 385, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel27Layout.createSequentialGroup()
                        .add(142, 142, 142)
                        .add(jPanel25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
            .add(jPanel13, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tappane.addTab("Invoice", jPanel27);

        table_InvoiceDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Indetail ID", "Cus ID", "Invoice No", "Product No", "Sale QTY", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_InvoiceDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_InvoiceDetailMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(table_InvoiceDetail);
        if (table_InvoiceDetail.getColumnModel().getColumnCount() > 0) {
            table_InvoiceDetail.getColumnModel().getColumn(0).setMinWidth(20);
        }

        jLabel17.setText("Search:");

        productno_textfield1.setBackground(new java.awt.Color(204, 204, 204));
        productno_textfield1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        productno_textfield1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel28Layout = new org.jdesktop.layout.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 235, Short.MAX_VALUE)
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        productsearch_textfield4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productsearch_textfield4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productsearch_textfield4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productsearch_textfield4KeyReleased(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "InDetail", "CusID", "InvoiceNo", "ProductNo" }));
        jComboBox2.setPreferredSize(new java.awt.Dimension(102, 30));

        jButton13.setText("Refresh Table");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel18.setText("CusName:");

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel37.setText("Product:");

        text_pCNo2.setEditable(false);
        text_pCNo2.setBackground(new java.awt.Color(204, 204, 204));
        text_pCNo2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pCNo2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        text_pCNo1.setBackground(new java.awt.Color(204, 204, 204));
        text_pCNo1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pCNo1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel46.setText("InvoiceNo:");

        text_pCNo6.setBackground(new java.awt.Color(204, 204, 204));
        text_pCNo6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        text_pCNo6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel36Layout = new org.jdesktop.layout.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel36Layout.createSequentialGroup()
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel18)
                            .add(jLabel37))
                        .add(18, 18, 18)
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(text_pCNo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 410, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(text_pCNo2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 511, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jLabel46)
                        .add(18, 18, 18)
                        .add(text_pCNo6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 410, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel36Layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel46)
                    .add(text_pCNo6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel18)
                    .add(text_pCNo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel37)
                    .add(text_pCNo2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Max Amount", "Min Amount", "Max Sale QTY", "Min Sale QTY" }));
        jComboBox5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBox5MouseEntered(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel14Layout = new org.jdesktop.layout.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(37, 37, 37)
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 260, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(jLabel17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(productsearch_textfield4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(39, 39, 39)
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 590, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 2174, Short.MAX_VALUE)
                        .add(jPanel28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 8055, Short.MAX_VALUE))
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton13)
                            .add(jComboBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 168, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE))))
            .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel14Layout.createSequentialGroup()
                    .add(0, 5695, Short.MAX_VALUE)
                    .add(productno_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 5695, Short.MAX_VALUE)))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(132, 132, 132)
                        .add(jPanel28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jComboBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel14Layout.createSequentialGroup()
                                .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(productsearch_textfield4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel17))
                                .add(18, 18, 18)
                                .add(jPanel36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 401, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(12, 12, 12)
                .add(jButton13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
            .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel14Layout.createSequentialGroup()
                    .add(0, 257, Short.MAX_VALUE)
                    .add(productno_textfield1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 256, Short.MAX_VALUE)))
        );

        tappane.addTab("History", jPanel14);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(tappane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(tappane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 567, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, 590));

        text_InvoiceID.setText("invoiceID");
        getContentPane().add(text_InvoiceID, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 620, -1, -1));

        text_inDetailID.setText("IndetailID");
        getContentPane().add(text_inDetailID, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 620, -1, -1));

        jLabel26.setText("InvoiceID");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 600, -1, -1));

        jLabel27.setText("InDetail ID");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 600, -1, -1));

        category_delete.setBackground(new java.awt.Color(102, 102, 102));
        category_delete.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        category_delete.setForeground(new java.awt.Color(255, 255, 255));
        category_delete.setText("Delete");
        category_delete.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        category_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(category_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 600, 87, 42));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //GetConnect to Database
    public Connection getConnection(){
            Connection con;
            try{
                //con = DriverManager.getConnection(URL , user , pass);
                con = DB_Connection.createConnection();
                return con;
            }catch (Exception e){
                e.printStackTrace();
                return null;
            }
    }
    
    //Alert Box
    public void infoMessage(String message, String title){
        
            JOptionPane.showMessageDialog(null, message, title, JOptionPane.INFORMATION_MESSAGE);
    }

//Class controll funfction of Category    
class Category{   
    
    int lastid;
    //get auto id
    public void categoryAutoID(){
            try{
                    con =  DB_Connection.createConnection();
                    Statement st = con.createStatement();
            
                    String selectQuery = "SELECT max(CategoryNo) FROM Category";
                    ResultSet rs = st.executeQuery(selectQuery);
                    //System.out.println(rs);
                    if(rs.next()){
                            //System.out.println(rs.getInt(1));
                            lastid = rs.getInt(1);
                            //System.out.println(lastid);
                            lastid++;
                        
                            lblCategoryNo.setText(Integer.toString(lastid));
                    }
                
            }catch (Exception e) {
                  throw new Error("Problem", e);
                  //e.printStackTrace();
            }
    }
    
    //Show List Of Category
    public void show_Category(){
        
             try{
                            
                    //Connection con =  DriverManager.getConnection(URL , user , pass);
                    con =  DB_Connection.createConnection();
                    Statement st=con.createStatement();  

                    String selectQuery="SELECT * FROM Category";
                    ResultSet rs = st.executeQuery(selectQuery);

                    while(rs.next())  {
                                
                            String cid = String.valueOf(rs.getInt("CategoryNo"));
                                    
                            String cname = rs.getString("CategoryName");
                                    
                            String tbData [] = {cid, cname};
                            DefaultTableModel tblModel = (DefaultTableModel)table_Category.getModel();
                                    
                            tblModel.addRow(tbData);
                    }
                        
            }catch (Exception e) {
                  throw new Error("Problem", e);
            }
    }
    
    //Clear data from Table Category
    public void clearTableCategory(){
        
        table_Category.setModel(new DefaultTableModel (null, new String[] {"Category No", "Category Name"}));
    }
    
}


//Class Staff
class Staff{
    

    //Show List Of Staff
    public void show_Staff(){
        
        try{
                            
            //con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();  

            String selectQuery="SELECT * FROM Staff";
            rs = st.executeQuery(selectQuery);

                while(rs.next()){
                                
                    String sid = String.valueOf(rs.getInt("StaffID"));
                    String sname = rs.getString("StaffName");
                    String spassword = rs.getString("StaffPassword");
                    String sgender = rs.getString("StaffGender");
                    String sposition = rs.getString("StaffPosition");
                    String sphone = rs.getString("StaffPhone");
                    String saddress = rs.getString("StaffAddress");
                            
                    String tbData [] = {sid, sname, spassword, sgender, sposition, sphone, saddress};
                    DefaultTableModel tblModel = (DefaultTableModel)table_Staff.getModel();
                    tblModel.addRow(tbData);
                }
                        
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
    }//end method Show_Staff
    
    
    //clear all data in table
    public void clearStaffTableData(){
        table_Staff.setModel(new DefaultTableModel (null, new String[] {"Staff ID", "Staff Name", "Staff Password", "Staff Gender", "Staff Position", "Staff Phone" ,"Staff Address"}));
    }
    
    //Clear Staff Text
    public void clearStaffText(){
        sID.setText("");
        sName.setText("");
        sPassword.setText("");
        sGender.setText("");
        sPosition.setText(""); 
        sPhone.setText("");
        sAddress.setText("");
            
    }
    
    int lastid;
    //get auto id
    public void staffAutoID(){
        
        try{
            //con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st = con.createStatement();
            
            String selectQuery = "SELECT max(StaffID) FROM Staff";
            rs = st.executeQuery(selectQuery);
                   
            if(rs.next()){
                            
                lastid = rs.getInt(1);
                           
                lastid++;
                        
                sID.setText(Integer.toString(lastid));
            }
                
        }catch (Exception e) {
            throw new Error("Problem", e);
                 
        }
    }
}//end class Staff (inner class)   
    

//Class Product
class Product{
    int lastid;
    //get auto id
    public void productAutoID(){
        
        try{
            //con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st = con.createStatement();
            
            String selectQuery = "SELECT max(ProductNo) FROM Product";
            rs = st.executeQuery(selectQuery);
                   
            if(rs.next()){
                            
                lastid = rs.getInt(1);
                           
                lastid++;
                        
                productno_textfield.setText(Integer.toString(lastid));
            }
                
        }catch (Exception e) {
            throw new Error("Problem", e);
                 
        }
    }
    
    
    //set list product empty in textfield
    public void setProductEmpty(){
        productno_textfield.setText("");
        text_pName.setText("");
        text_pCNo.setText("");
        text_unitPrice.setText("");
        text_pSellingPrice.setText("");
        calender_receivingDate.setCalendar(null);
        calender_expireDate.setCalendar(null);
        
        pd.productAutoID();
    }
    
    //Show List Of Product
    public void show_Product(){
        
        try{
                            
            //Connection con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            Statement st=con.createStatement();  

            String selectQuery="SELECT * FROM Product";
            ResultSet rs = st.executeQuery(selectQuery);

            while(rs.next())  {
                                
                String pno = String.valueOf(rs.getInt("ProductNo"));
                String pname = rs.getString("ProductName");
                String cno = rs.getString("CategoryNo");
                String punitprice = rs.getString("UnitPrice");
                String psellingprice = rs.getString("SellingPrice");
                String pquantity = rs.getString("Quantity");
                String preceivingdate = rs.getString("ReceivingDate");
                String pexpiredate = rs.getString("Expire_Date");
                                    
                String tbData [] = {pno, pname, cno, punitprice, psellingprice, pquantity, preceivingdate, pexpiredate};
                DefaultTableModel tblModel = (DefaultTableModel)table_Product.getModel();
                                    
                tblModel.addRow(tbData);
            }
                        
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }
    
    
    //clear all data in table
    public void clearProductTableData(){
        table_Product.setModel(new DefaultTableModel (null, new String[] {"Product No", "Product Name", "Category No", "UnitPrice", "Selling Price" ,"Quantity", "Receiving Date", "Expire Date"}));
    }
    
    
    //get data from sql into combobox
    public void getDataIntoCombobox(){
        try{
                            
            //Connection con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            Statement st=con.createStatement();  

            String selectQuery="SELECT CategoryName FROM Category";
            ResultSet rs = st.executeQuery(selectQuery);

            while(rs.next())  {
                String cname = rs.getString("CategoryName");
                jComboBox1.addItem(cname);
            }
                        
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }
    
    
    //clear data in JCombobox
    public void clearDataCombo(){
        DefaultComboBoxModel dm = new DefaultComboBoxModel();
        jComboBox1.setModel(dm);
    }
    
    
    //delete record product with its relationship 'InvoiceDetail'
    public void deleteProductRecord(){
        try{

            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String pNo = productno_textfield.getText();

            String selectQuery = "SELECT * FROM Product";
            rs = st.executeQuery(selectQuery);

            if(table_Product.getSelectedRow() != -1){ //if row is select

                if(rs.next()){
                    int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'Delete'?");

                    if(num==0){
                        try{

                            con =  DB_Connection.createConnection();
                            st=con.createStatement();

                            String deletequery2 = "DELETE FROM InvoiceDetail WHERE ProductNo="+pNo;
                            st.executeUpdate(deletequery2);//delete foreign key first
                                
                            String deletequery1 = "DELETE FROM Product WHERE ProductNo="+pNo;
                            st.executeUpdate(deletequery1);//delete foreign key first
                                
                            //Table invoice detail
                            id.clearInDetail();
                            id.show_InDetail();
                                
                            //Table Product
                            clearProductTableData();
                            show_Product();

                            JOptionPane.showMessageDialog(null,"Delete Successfully.");
                         
                        }catch (Exception e) {
                            throw new Error("Problem", e);
                        }
                        
                    }else{
                        
                    }

                }else{
                    JOptionPane.showMessageDialog(null,"Data Don't Have In Table.");
                }

            }else{ //if row is not select

                JOptionPane.showMessageDialog(null,"Please Click On Record.");
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//end method delete record product
    
    
    
}//end class Product (Inner class)


//Class Invoice
class Invoice{
    //Show List Of Category
    public void show_Invoice(){
        
            try{
                            
                //Connection con =  DriverManager.getConnection(URL , user , pass);
                con =  DB_Connection.createConnection();
                Statement st=con.createStatement();  

                String selectQuery="SELECT * FROM Invoice";
                ResultSet rs = st.executeQuery(selectQuery);
                
                while(rs.next())  {
                                
                    String invoiceNo = String.valueOf(rs.getInt("InvoiceNo"));
                    String invoiceDate = rs.getString("InvoiceDate");
                    String cID = String.valueOf(rs.getInt("CusID"));
                    String sID = rs.getString("StaffID");
                    String subAmount = String.valueOf(rs.getInt("SubAmount"));
                    String discount = rs.getString("Discount");
                    String tax = String.valueOf(rs.getInt("Tax"));
                    String total = rs.getString("Total");
                            
                    String tbData [] = {invoiceNo, invoiceDate, cID, sID, subAmount, discount, tax, total};//add into table
                    DefaultTableModel tblModel = (DefaultTableModel)table_Invoice.getModel();
                                    
                    tblModel.addRow(tbData);
                }
                        
            }catch (Exception e) {
                  throw new Error("Problem", e);
            }
    }
    
    
    //clear table invoice
    public void clearTableInvoice(){
        table_Invoice.setModel(new DefaultTableModel (null, new String[] {"Invoice No", "Invoice Date ", "Cus ID", "Staff ID", "Sub Amount", "Discount", "Tax", "Total"}));
    }
    
   
}


//Class Customer
class Customer{
    
    //Show List Of Product
    public void show_Customer(){
        
        try{
                            
            //Connection con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            Statement st=con.createStatement();  

            String selectQuery="SELECT * FROM Customer";
            ResultSet rs = st.executeQuery(selectQuery);

            while(rs.next())  {
                                
                String cid = String.valueOf(rs.getInt("CusID"));
                String cname = rs.getString("CusName");
                String cgender = rs.getString("CusGender");
                String cphone = rs.getString("CusPhone");
                String caddress = rs.getString("CusAddress");
                
                                    
                String tbData [] = {cid, cname, cgender, cphone, caddress};
                DefaultTableModel tblModel = (DefaultTableModel)table_Customer.getModel();
                                    
                tblModel.addRow(tbData);
            }
                        
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }
    
    
    //clear all data in table
    public void clearCustomerTableData(){
        table_Customer.setModel(new DefaultTableModel (null, new String[] {"Cus ID", "Cus Name", "Cus Gender", "Cus Phone", "Cus Address"}));
    }
    
    
    public void deleteCustomerRecord(){
        try{

            //con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String cno = text_cusID.getText();

            String selectQuery = "SELECT * FROM Customer";
            rs = st.executeQuery(selectQuery);

            if(table_Customer.getSelectedRow() != -1){ //if row is select

                if(rs.next()){
                    int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'Delete'?");

                    if(num==0){
                        try{

                            con =  DB_Connection.createConnection();
                            st=con.createStatement();

                            //catch InDetailID of InvoiceDetail
                            String selectInDetailQuery = "select InDetail from InvoiceDetail WHERE InvoiceNo='" +text_InvoiceID.getText()+ "' ";
                            rs = st.executeQuery(selectInDetailQuery);

                            //if invoice detail have and match with value that user input
                            if(rs.next()){
                                
                                String deletequery2 = "DELETE FROM InvoiceDetail WHERE CusID="+text_cusID.getText();
                                st.executeUpdate(deletequery2);//delete foreign key first
                                
                                String deletequery1 = "DELETE FROM Invoice WHERE CusID="+text_cusID.getText();
                                st.executeUpdate(deletequery1);//delete foreign key first

                                
                                String deleteQuery="DELETE FROM Customer WHERE CusID="+text_cusID.getText();
                                st.executeUpdate(deleteQuery);//delete primary key last

                                //Table Invoice Detail
                                id.clearInDetail();
                                id.show_InDetail();

                                //table Customer
                                clearCustomerTableData();
                                show_Customer();

                                //Table Invoice
                                iv.clearTableInvoice();
                                iv.show_Invoice();

                                JOptionPane.showMessageDialog(null,"Delete Successfully.");
                                
                            }else{ //if Invoice detail is delete 
                                
                                String deletequery1 = "DELETE FROM Invoice WHERE CusID="+text_cusID.getText();
                                st.executeUpdate(deletequery1);//delete foreign key first

                                
                                String deleteQuery="DELETE FROM Customer WHERE CusID="+text_cusID.getText();
                                st.executeUpdate(deleteQuery);//delete primary key last

                                //table Customer
                                clearCustomerTableData();
                                show_Customer();

                                //Table Invoice
                                iv.clearTableInvoice();
                                iv.show_Invoice();
                                
                                JOptionPane.showMessageDialog(null,"Delete Successfully.");
                            }

                        }catch (Exception e) {
                            throw new Error("Problem", e);
                        }
                        
                        
                    }else{
                        
                        
                    }

                }else{
                    JOptionPane.showMessageDialog(null,"Data Don't Have In Table.");
                }

            }else{ //if row is not select

                JOptionPane.showMessageDialog(null,"Please Click On Record.");
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }
    
    
}//end class Customer (Inner class)   



//class Invoice Detail
class InvoiceDetail{
    
    public void show_InDetail(){
        try{
                            
            //Connection con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            Statement st=con.createStatement();  

            String selectQuery="SELECT * FROM InvoiceDetail";
            ResultSet rs = st.executeQuery(selectQuery);

            while(rs.next())  {
                 
                String inDetailID = String.valueOf(rs.getInt("InDetail"));
                String cID = String.valueOf(rs.getInt("CusID"));
                String invoiceNo = String.valueOf(rs.getInt("InvoiceNo"));
                String productNo = rs.getString("ProductNo");
                String saleQty = rs.getString("SaleQTY");
                String amount = rs.getString("Amount");
                
                
                                    
                String tbData [] = {inDetailID, cID, invoiceNo, productNo, saleQty, amount};
                DefaultTableModel tblModel = (DefaultTableModel)table_InvoiceDetail.getModel();
                                    
                tblModel.addRow(tbData);
            }
                        
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
    }
    
    
    
    public void clearInDetail(){
        table_InvoiceDetail.setModel(new DefaultTableModel (null, new String[] {"InDetail ID", "CusID", "Invoice No", "Product No", "Sale QTY", "Amount"}));
    }
}

 // Execute The Insert Update And Delete Querys
   public void executeSQlQuery_Category(String query, String message)
   {
       
       try{
           //con = DriverManager.getConnection(URL , user , pass);
           con =  DB_Connection.createConnection();
           
           st = con.createStatement();
            
           //this codition if selected record on table (if select = 1)
           if((st.executeUpdate(query)) == 1){
               
                // refresh jtable data
                DefaultTableModel model1 = (DefaultTableModel)table_Category.getModel();
                DefaultTableModel model2 = (DefaultTableModel)table_Product.getModel();
                DefaultTableModel model3 = (DefaultTableModel)table_Staff.getModel();
                DefaultTableModel model4= (DefaultTableModel)table_Customer.getModel();
                
                int num=  JOptionPane.showConfirmDialog(null, "Are you sure "+message+"?");
           
                if(num==0){
                    model1.setRowCount(0); //clear old data on table 
                    cg.show_Category(); //get data from database (new data after delete)
                    cg.categoryAutoID();
                
                    model2.setRowCount(0);
                    pd.productAutoID();
                    pd.show_Product();
                    
                    model3.setRowCount(0);
                    sf.clearStaffTableData();
                    sf.show_Staff();
                    SignUpScreen sus = new SignUpScreen();
                    sus.StaffAutoID();
                    
                    model4.setRowCount(0);
                    cs.clearCustomerTableData();
                    cs.show_Customer();
                    
                    txtcategoryname.setText(" ");
                
                    JOptionPane.showMessageDialog(null, "Data "+message+" Succefully");
                }else{
               
                }
         
                
           }else{//if table not select row
               JOptionPane.showMessageDialog(null, "Data Not "+message);
           }
       }catch(Exception ex){
           ex.printStackTrace();
       }
   }

   


    private void category_dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_dashboardMouseClicked
        // TODO add your handling code here:
          tappane.setSelectedIndex(1);
    }//GEN-LAST:event_category_dashboardMouseClicked

    private void category_paneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_paneMouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(1);
    }//GEN-LAST:event_category_paneMouseClicked

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
            tappane.setSelectedIndex(2);
    }//GEN-LAST:event_jPanel5MouseClicked

    private void Product_DashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Product_DashboardMouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(2);
    }//GEN-LAST:event_Product_DashboardMouseClicked

    private void History_Dashboard2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_History_Dashboard2MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(3);
    }//GEN-LAST:event_History_Dashboard2MouseClicked

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(3);
    }//GEN-LAST:event_jPanel8MouseClicked

    private void History_Dashboard3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_History_Dashboard3MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(4);
    }//GEN-LAST:event_History_Dashboard3MouseClicked

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(4);
    }//GEN-LAST:event_jPanel9MouseClicked

    private void History_DashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_History_DashboardMouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(5);
    }//GEN-LAST:event_History_DashboardMouseClicked

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(5);
    }//GEN-LAST:event_jPanel6MouseClicked

    private void staff_dashboard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_dashboard1MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(6);
    }//GEN-LAST:event_staff_dashboard1MouseClicked

    private void panestaff_dashboard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panestaff_dashboard1MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(6);
    }//GEN-LAST:event_panestaff_dashboard1MouseClicked
    
    
    
    private void History_Dashboard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_History_Dashboard1MouseClicked
        // TODO add your handling code here:
        
        int num=  JOptionPane.showConfirmDialog(null, "Are you Login?");
           
        if(num==0){
             
            LoginScreen ls = new LoginScreen();
                ls.setVisible(true);
                ls.setLocationRelativeTo(null);
                this.setVisible(false);
                    
        }else{
               
        }
        
    }//GEN-LAST:event_History_Dashboard1MouseClicked

    private void panestaff_dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panestaff_dashboardMouseClicked
        // TODO add your handling code here:
        SignUpScreen sup = new SignUpScreen();
        sup.setVisible(true);
        sup.setLocationRelativeTo(null);
        sup.StaffAutoID();
        sup.signup_lblsignin.setVisible(false);
        sup.jLabel8.setVisible(true);
        
    }//GEN-LAST:event_panestaff_dashboardMouseClicked

    private void staff_dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_dashboardMouseClicked
        // TODO add your handling code here:
        SignUpScreen sup = new SignUpScreen();
        sup.setVisible(true);
        sup.setLocationRelativeTo(null);
        sup.StaffAutoID();
        sup.signup_lblsignin.setVisible(false);
        sup.jLabel8.setVisible(true);
    }//GEN-LAST:event_staff_dashboardMouseClicked

    private void text_cusSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_cusSearchKeyReleased
        // TODO add your handling code here:
        
        /*String cusSearch = text_cusSearch.getText();
        
        try{
            
            //search for ID
            if(cusSearch.matches("^[0-9]+$")){
                String selectQuery = "select * from Customer where CusID="+cusSearch;
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                cusTable.setModel(DbUtils.resultSetToTableModel(rs));
            }else if(cusSearch.matches("^[A-Z]" )){ 
                String selectQuery = "select * from Customer where CusAddress LIKE '%"+cusSearch+"%'  ";
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                cusTable.setModel(DbUtils.resultSetToTableModel(rs));
            }else{
                String selectQuery = "select * from Customer where CusName LIKE '%"+cusSearch+"%'  ";
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                cusTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }*/
        try{

            // con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String selection = (String)jComboBox4.getSelectedItem();
            String selectQuery = "select * from Customer where "+selection+"=?";
            
            pst = con.prepareStatement(selectQuery);
            pst.setString(1, text_cusSearch.getText());
            rs=pst.executeQuery();
            table_Customer.setModel(DbUtils.resultSetToTableModel(rs));

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
        
    }//GEN-LAST:event_text_cusSearchKeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        cs.deleteCustomerRecord();
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        cs.clearCustomerTableData();
        cs.show_Customer();
        
        text_cusSearch.setText("");
                
        text_cusID.setText("");
        text_cusName.setText("");
        text_cusGender.setText("");
        text_cusPhone.setText("");
        text_cusAddress.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        sf.clearStaffText();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        try{

            // con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String id = sID.getText();
            String name = sName.getText();
            String password = sPassword.getText();
            String gender = sGender.getText();
            String position = sPosition.getText();
            String phone = sPhone.getText();
            String address = sAddress.getText();

            String insertQuery="insert into Staff values (?, ?, ?, ?, ?, ?, ?)";

            pst = con.prepareStatement (insertQuery);

            String selectQueryCategory = "select * from Staff WHERE StaffID="+id;
            ResultSet rs = st.executeQuery(selectQueryCategory);

            if(rs.next()){
                JOptionPane.showMessageDialog(null,"ID: "+id+ " Already Have.");
            }else{//if Category No have in table Category

                if(name.isEmpty()){//if Product Name is not complete
                    JOptionPane.showMessageDialog(null,"Staff Name is empty.");

                }else
                if(password.isEmpty()){//if Category No is not empty
                    JOptionPane.showMessageDialog(null,"Password is empty.");

                }else
                if(gender.isEmpty()){//if unit price is not complete
                    JOptionPane.showMessageDialog(null,"Gender is empty.");

                }else
                if(position.isEmpty()){//if selling price is not complete
                    JOptionPane.showMessageDialog(null,"Position is empty.");

                }else
                if(phone.isEmpty()){//if quantity is not complete
                    JOptionPane.showMessageDialog(null,"Phone is empty.");

                }else
                if(address.isEmpty()){//if receiving date is not complete
                    JOptionPane.showMessageDialog(null,"Address is empty.");

                }else{//if all textfield is complete
                    int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'Add'?");

                    if(num==0){ //if click "yes"
                        pst.setString(1, id);
                        pst.setString(2, name);
                        pst.setString(3, password);
                        pst.setString(4, gender);
                        pst.setString(5, position);
                        pst.setString(6, phone);
                        pst.setString(7, address);

                        pst.executeUpdate();//update into database

                        sf.clearStaffTableData();
                        sf.show_Staff();
                        
                        JOptionPane.showMessageDialog(null,"Insert Data successfully");


                    }else{ //If click "No"
                        pd.setProductEmpty();
                    }
                }
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String query = "UPDATE Staff SET StaffName='"+sName.getText()+"', StaffPassword='"+sPassword.getText()+"', StaffGender='"+sGender.getText()+"', StaffPosition='"+sPosition.getText()+"', StaffPhone='"+sPhone.getText()+"', StaffAddress='"+sAddress.getText()+"' WHERE StaffID = "+sID.getText();
        executeSQlQuery_Category(query, "Updated");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String query = "DELETE FROM Staff WHERE StaffID = "+sID.getText();

        executeSQlQuery_Category(query, "Delete");

        sf.clearStaffText();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void productsearch_textfield1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productsearch_textfield1KeyReleased
        // TODO add your handling code here:
        String cusSearch = productsearch_textfield1.getText();
        
        try{
            
            //search for ID
            if(cusSearch.matches("^[0-9]")){
                String selectQuery = "select * from Staff where StaffID="+cusSearch;
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                table_Staff.setModel(DbUtils.resultSetToTableModel(rs));
                
            }else{//search for name
                String selectQuery = "select * from Staff where StaffName LIKE '%"+cusSearch+"%'  ";
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                table_Staff.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_productsearch_textfield1KeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        sf.clearStaffTableData();
        sf.show_Staff();
        
        productsearch_textfield1.setText("");
        sID.setText("");
        sName.setText("");
        sPassword.setText("");
        sGender.setText("");
        sPosition.setText("");
        sPhone.setText("");
        sAddress.setText("");
        
        sf.staffAutoID();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void table_StaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_StaffMouseClicked
        
        DefaultTableModel model = (DefaultTableModel) table_Staff.getModel();
        int selectedRow = table_Staff.getSelectedRow();

        sID.setText(model.getValueAt(selectedRow, 0).toString());
        sName.setText(model.getValueAt(selectedRow, 1).toString());
        sPassword.setText(model.getValueAt(selectedRow, 2).toString());
        sGender.setText(model.getValueAt(selectedRow, 3).toString());
        sPosition.setText(model.getValueAt(selectedRow, 4).toString());
        sPhone.setText(model.getValueAt(selectedRow, 5).toString());
        sAddress.setText(model.getValueAt(selectedRow, 6).toString());
    }//GEN-LAST:event_table_StaffMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        pd.clearProductTableData();
        pd.show_Product();
        
        productsearch_textfield.setText("");
        productno_textfield.setText("");
        text_pName.setText("");
        text_unitPrice.setText("");
        text_pSellingPrice.setText("");
        text_pQuantity.setText("");
        calender_receivingDate.setCalendar(null);
        calender_expireDate.setCalendar(null);
        
        pd.productAutoID();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void table_ProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_ProductKeyReleased
        // TODO add your handling code here:
        //Update
    }//GEN-LAST:event_table_ProductKeyReleased

    private void table_ProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_ProductMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table_Product.getModel();
        int selectedRow = table_Product.getSelectedRow();

        productno_textfield.setText(model.getValueAt(selectedRow, 0).toString());
        text_pName.setText(model.getValueAt(selectedRow, 1).toString());
        text_pCNo.setText(model.getValueAt(selectedRow, 2).toString());
        text_unitPrice.setText(model.getValueAt(selectedRow, 3).toString());
        text_pSellingPrice.setText(model.getValueAt(selectedRow, 4).toString());
        text_pQuantity.setText(model.getValueAt(selectedRow, 5).toString());
        
        try{
            
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String cno = text_pCNo.getText();
            String selectQuery = "select CategoryName from Category WHERE CategoryNo='" +cno+ "' ";
            rs = st.executeQuery(selectQuery);

            if(rs.next()){
                
                //Convert CategoryNo to CategoryName
                String cname = rs.getString("CategoryName");
                jComboBox1.setSelectedItem(cname);
                
                //Get Receiving date from table
                java.util.Date receivingdate = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(selectedRow, 6).toString());
                calender_receivingDate.setDate(receivingdate);
                
                //Get Expire date from table
                java.util.Date expiredate = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(selectedRow, 7).toString());
                calender_expireDate.setDate(expiredate);
                
            }else{
                JOptionPane.showMessageDialog(null," Don't Have");
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//GEN-LAST:event_table_ProductMouseClicked

    private void calender_expireDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calender_expireDateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_calender_expireDateKeyPressed

    private void calender_expireDateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calender_expireDateMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_calender_expireDateMouseReleased

    private void calender_expireDateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calender_expireDateMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_calender_expireDateMousePressed

    private void calender_expireDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calender_expireDateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_calender_expireDateMouseClicked

    private void calender_receivingDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calender_receivingDateKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calender_receivingDateKeyPressed

    private void calender_receivingDateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calender_receivingDateMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calender_receivingDateMouseReleased

    private void calender_receivingDateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calender_receivingDateMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calender_receivingDateMousePressed

    private void calender_receivingDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calender_receivingDateMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calender_receivingDateMouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

        try{

            //con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String selectValue = jComboBox1.getSelectedItem().toString();
            String selectQuery = "select CategoryNo from Category WHERE CategoryName='" +selectValue+ "' ";
            rs = st.executeQuery(selectQuery);

            if(rs.next()){
                String cno = rs.getString("CategoryNo");
                text_pCNo.setText(cno);

            }else{

                JOptionPane.showMessageDialog(null," Don't Have");

            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void product_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_resetActionPerformed
        // TODO add your handling code here:
        pd.setProductEmpty();
    }//GEN-LAST:event_product_resetActionPerformed

    private void product_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_addActionPerformed
        // TODO add your handling code here:

        try{

            // con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String pno = productno_textfield.getText();
            String pname = text_pName.getText();
            String cno = text_pCNo.getText();
            String punitprice = text_unitPrice.getText();
            String psellingprice = text_pSellingPrice.getText();
            String pquantity = text_pQuantity.getText();
            
            SimpleDateFormat date_format1 = new SimpleDateFormat("yyyy-MM-dd");
            String receivingDate = date_format1.format(calender_receivingDate.getDate());
            
            SimpleDateFormat date_format2 = new SimpleDateFormat("yyyy-MM-dd");
            String expireDate = date_format2.format(calender_expireDate.getDate());
            
            //String preceivingdate = productexpiredate_textfield1.getText();
            //String pexpiredate = productexpiredate_textfield.getText();

            String insertQuery="insert into Product (ProductNo, ProductName, CategoryNo, UnitPrice, SellingPrice, Quantity, ReceivingDate, Expire_Date) values (?, ?, ?, ?, ?, ?, ?, ?)";

            pst = con.prepareStatement (insertQuery);

            String selectQuery = "select * from Product WHERE ProductName='" +pname+ "' ";
            rs = st.executeQuery(selectQuery);

            if(rs.next()){ // if product name is dumplicate
                JOptionPane.showMessageDialog(null, pname+ "is Already Have.");

            }else{

                String selectQueryCategory = "select * from Category WHERE CategoryNo='" +cno+ "' ";
                ResultSet rs1 = st.executeQuery(selectQueryCategory);

                if(rs1.next()){ //if Category No have in table Category

                    if(pname.isEmpty()){//if Product Name is not complete
                        JOptionPane.showMessageDialog(null,"Product is empty.");

                    }else
                    if(cno.isEmpty()){//if Category No is not empty
                        JOptionPane.showMessageDialog(null,"CategoryNo is empty.");

                    }else
                    if(punitprice.isEmpty()){//if unit price is not complete
                        JOptionPane.showMessageDialog(null,"UnitPrice is empty.");

                    }else
                    if(psellingprice.isEmpty()){//if selling price is not complete
                        JOptionPane.showMessageDialog(null,"Selling Price is empty.");

                    }else
                    if(pquantity.isEmpty()){//if quantity is not complete
                        JOptionPane.showMessageDialog(null,"Quantity is empty.");

                    }else
                    if(receivingDate.isEmpty()){//if receiving date is not complete
                        JOptionPane.showMessageDialog(null,"Receiving Date is empty.");

                    }else
                    if(expireDate.isEmpty()){//if expire date is not complete
                        JOptionPane.showMessageDialog(null,"Expire Date is empty.");

                    }else{//if all textfield is complete
                        int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'Add'?");

                        if(num==0){ //if click "yes"
                            pst.setString(1, pno);
                            pst.setString(2, pname);
                            pst.setString(3, cno);
                            pst.setString(4, punitprice);
                            pst.setString(5, psellingprice);
                            pst.setString(6, pquantity);
                            //pst.setString(7, preceivingdate);
                            pst.setString(7, receivingDate);
                            pst.setString(8, expireDate);

                            pst.executeUpdate();//update into database

                            JOptionPane.showMessageDialog(null,"Insert Data successfully");

                            //Add data from Jtextfield to Table
                            DefaultTableModel model = (DefaultTableModel)table_Product.getModel();
                            model.addRow(new Object[] {pno, pname, cno, punitprice, psellingprice, pquantity, receivingDate, expireDate  });

                            //pd.clearProductTableData();
                            //pd.show_Product();

                            pd.setProductEmpty();

                        }else{ //If click "No"
                            pd.setProductEmpty();
                        }

                    }

                }else{//if category don't have in table Category
                    JOptionPane.showMessageDialog(null," CategoryNo ("+cno+") don't have");
                }
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//GEN-LAST:event_product_addActionPerformed

    private void product_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_updateActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat date_format1 = new SimpleDateFormat("yyyy-MM-dd");
        String receivingDate = date_format1.format(calender_receivingDate.getDate());
            
        SimpleDateFormat date_format2 = new SimpleDateFormat("yyyy-MM-dd");
        String expireDate = date_format2.format(calender_expireDate.getDate());
        
        String query = "UPDATE Product SET ProductName='"+text_pName.getText()+"', CategoryNo='"+text_pCNo.getText()+"', UnitPrice='"+text_unitPrice.getText()+"', SellingPrice='"+text_pSellingPrice.getText()+"', Quantity='"+text_pQuantity.getText()+"', ReceivingDate='"+receivingDate+"', Expire_Date='"+expireDate+"' WHERE ProductNo = "+productno_textfield.getText();
        executeSQlQuery_Category(query, "Updated");
    }//GEN-LAST:event_product_updateActionPerformed

    private void product_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_deleteActionPerformed
        // TODO add your handling code here:
        //String query = "DELETE FROM Product WHERE ProductNo = "+productno_textfield.getText();

       // executeSQlQuery_Category(query, "Delete");
       pd.deleteProductRecord();
        pd.setProductEmpty();
    }//GEN-LAST:event_product_deleteActionPerformed

    private void productsearch_textfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productsearch_textfieldKeyReleased
        // TODO add your handling code here:
        
        String cusSearch = productsearch_textfield.getText();
        
        try{
            if(cusSearch.matches("^[0-9]")){
                String selectQuery = "select * from Product where ProductNo="+cusSearch;
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                table_Product.setModel(DbUtils.resultSetToTableModel(rs));
            }else{
                String selectQuery = "select * from Product where ProductName LIKE '%"+cusSearch+"%'  ";
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                table_Product.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_productsearch_textfieldKeyReleased

    private void table_CategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_CategoryMouseClicked
        // TODO add your handling code here:

        //Update
        DefaultTableModel model = (DefaultTableModel) table_Category.getModel();
        int selectedRow = table_Category.getSelectedRow();

        lblCategoryNo.setText(model.getValueAt(selectedRow, 0).toString());
        txtcategoryname.setText(model.getValueAt(selectedRow, 1).toString());
    }//GEN-LAST:event_table_CategoryMouseClicked

    private void categorysearch_textfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categorysearch_textfieldKeyReleased
        // TODO add your handling code here:

        /*DefaultTableModel table = (DefaultTableModel) jTable3.getModel();
        String search = categorysearch_textfield.getText().toUpperCase();
        TableRowSorter <DefaultTableModel> tr = new TableRowSorter <DefaultTableModel> (table);
        jTable3.setRowSorter(tr);
        tr.setRowFilter (RowFilter.regexFilter (search));*/
        
        String cusSearch = categorysearch_textfield.getText();
        
        try{
            if(cusSearch.matches("^[0-9]")){
                String selectQuery = "select * from Category where CategoryNo="+cusSearch;
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                table_Category.setModel(DbUtils.resultSetToTableModel(rs));
            }else{
                String selectQuery = "select * from Category where CategoryName LIKE '%"+cusSearch+"%'  ";
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                table_Category.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_categorysearch_textfieldKeyReleased

    private void category_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_resetActionPerformed
        // TODO add your handling code here:
        cg.categoryAutoID();
        txtcategoryname.setText(" ");
    }//GEN-LAST:event_category_resetActionPerformed

    private void category_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_deleteActionPerformed
        // TODO add your handling code here:

        try{

            //con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String cno = lblCategoryNo.getText();

            String selectQuery = "SELECT * FROM Category";
            rs = st.executeQuery(selectQuery);

            if(table_Category.getSelectedRow() != -1){ //if row is select

                if(rs.next()){
                    int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'delete'?");

                    if(num==0){
                        
                        String deletequery1 = "DELETE FROM Product WHERE CategoryNo="+cno;
                        st.executeUpdate(deletequery1);//delete foreign key first

                        String deleteQuery="DELETE FROM Category WHERE CategoryNo="+cno;
                        st.executeUpdate(deleteQuery);//delete primary key last

                        cg.clearTableCategory();//clear data in table category
                        cg.show_Category();//get data from Category (sql)
                        cg.categoryAutoID(); //autoId

                        pd.clearProductTableData();//clear data in table Product
                        pd.show_Product();//get data from Product (sql)

                        txtcategoryname.setText("");

                        pd.clearDataCombo(); //clear data in product combo
                        pd.getDataIntoCombobox(); //get data from sql into combobox (product)

                        JOptionPane.showMessageDialog(null,"Delete Successfully.");

                    }else{
                        String deleteQuery="DELETE FROM Category WHERE CategoryNo="+cno;
                        st.executeUpdate(deleteQuery);//delete primary key last

                        cg.clearTableCategory();//clear data in table category
                        cg.show_Category();//get data from Category (sql)
                        cg.categoryAutoID(); //autoId

                        pd.clearProductTableData();//clear data in table Product
                        pd.show_Product();//get data from Product (sql)

                        txtcategoryname.setText("");

                        pd.clearDataCombo(); //clear data in product combo
                        pd.getDataIntoCombobox(); //get data from sql into combobox (product)

                        JOptionPane.showMessageDialog(null,"Delete Successfully.");
                        txtcategoryname.setText(" ");
                        cg.categoryAutoID();
                    }

                }else{
                    JOptionPane.showMessageDialog(null,"Data Don't Have In Table.");
                }

            }else{ //if row is not select

                JOptionPane.showMessageDialog(null,"Please Click On Record.");
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//GEN-LAST:event_category_deleteActionPerformed

    private void category_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_addActionPerformed

        //String query = "INSERT INTO Category(CategoryNo, CategoryName) VALUES ('"+lblCategoryNo.getText()+"','"+txtcategoryname.getText()+"')";
        //executeSQlQuery_Category(query, "Inserted");

        try{

            //con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String cno = lblCategoryNo.getText();
            String cname = txtcategoryname.getText();

            String insertQuery="insert into Category (CategoryNo, CategoryName) values (?, ?)";

            pst = con.prepareStatement (insertQuery);

            String selectQuery = "select * from Category WHERE CategoryName='" +cname+ "' ";
            rs = st.executeQuery(selectQuery);

            if(rs.next()){
                JOptionPane.showMessageDialog(null, cname+ " is Already Have.");
                txtcategoryname.setText(" ");

            }else{

                if(cname.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Category is empty.");

                }else{
                    int num=  JOptionPane.showConfirmDialog(null, "Are you sure 'Add'?");

                    if(num==0){
                        pst.setString(1, cno);
                        pst.setString(2, cname);

                        pst.executeUpdate();

                        JOptionPane.showMessageDialog(null,"Insert Data successfully");

                        jComboBox1.setSelectedIndex(0);
                        //get data from sql to comboBox
                        pd.clearDataCombo();
                        pd.getDataIntoCombobox();

                        //autoID
                        cg.categoryAutoID();

                        //clear data in jtable
                        //cg.clearTableCategory();

                        //get data from sql
                        //cg.show_Category();

                        //Add data from Jtextfield to Table
                        DefaultTableModel model = (DefaultTableModel)table_Category.getModel();
                        model.addRow(new Object[] {cno, cname});

                        txtcategoryname.setText(" ");
                    }else{
                        txtcategoryname.setText(" ");
                        cg.categoryAutoID();
                    }

                }

            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//GEN-LAST:event_category_addActionPerformed

    private void category_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_updateActionPerformed
        // TODO add your handling code here:

        String query = "UPDATE Category SET CategoryName='"+txtcategoryname.getText()+"' WHERE CategoryNo = "+lblCategoryNo.getText();
        executeSQlQuery_Category(query, "Updated");

        pd.clearDataCombo(); //clear data in product combo
        pd.getDataIntoCombobox(); //get data from sql into combobox (product)
    }//GEN-LAST:event_category_updateActionPerformed

    private void table_CustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_CustomerMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table_Customer.getModel();
        int selectedRow = table_Customer.getSelectedRow();

        text_cusID.setText(model.getValueAt(selectedRow, 0).toString());
        
        try{

            //con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            //String selectValue = jComboBox1.getSelectedItem().toString();
            String selectQuery = "select InvoiceNo from Invoice WHERE CusID="+text_cusID.getText();
            rs = st.executeQuery(selectQuery);
            
            if(rs.next()){
                String ino = rs.getString("InvoiceNo");
                text_InvoiceID.setText(ino);
            
            }else{

                String ino = rs.getString("InvoiceNo");
                text_InvoiceID.setText(ino);
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
        text_cusID.setText(model.getValueAt(selectedRow, 0).toString());
        text_cusName.setText(model.getValueAt(selectedRow, 1).toString());
        text_cusGender.setText(model.getValueAt(selectedRow, 2).toString());
        text_cusPhone.setText(model.getValueAt(selectedRow, 3).toString());
        text_cusAddress.setText(model.getValueAt(selectedRow, 4).toString());
        
    }//GEN-LAST:event_table_CustomerMouseClicked

    private void productsearch_textfield1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productsearch_textfield1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_productsearch_textfield1KeyPressed

    private void jPanel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(1);
    }//GEN-LAST:event_jPanel22MouseClicked

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(1);
    }//GEN-LAST:event_jLabel30MouseClicked

    private void jPanel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel21MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(2);
    }//GEN-LAST:event_jPanel21MouseClicked

    private void jLabel40MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel40MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(2);
    }//GEN-LAST:event_jLabel40MouseClicked

    private void jPanel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel19MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(3);
    }//GEN-LAST:event_jPanel19MouseClicked

    private void jLabel42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel42MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(3);
    }//GEN-LAST:event_jLabel42MouseClicked

    private void jPanel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel20MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(4);
    }//GEN-LAST:event_jPanel20MouseClicked

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(4);
    }//GEN-LAST:event_jLabel41MouseClicked

    private void jPanel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel24MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(5);
    }//GEN-LAST:event_jPanel24MouseClicked

    private void jLabel43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel43MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(5);
    }//GEN-LAST:event_jLabel43MouseClicked

    private void jPanel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel23MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(6);
    }//GEN-LAST:event_jPanel23MouseClicked

    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
        // TODO add your handling code here:
        tappane.setSelectedIndex(6);
    }//GEN-LAST:event_jLabel44MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        SimpleDateFormat date_format1 = new SimpleDateFormat("yyyy-MM-dd");
        String fdate = date_format1.format(jDateChooser3.getDate());
        
        SimpleDateFormat date_format2 = new SimpleDateFormat("yyyy-MM-dd");
        String ldate = date_format2.format(jDateChooser4.getDate());
        
        try{
            
            
                String selectQuery = "select * from Invoice where InvoiceDate BETWEEN '"+fdate+ "' AND '"+ldate+"' ";
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                table_Invoice.setModel(DbUtils.resultSetToTableModel(rs));
                
            
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String query = "UPDATE Customer SET CusName='"+text_cusName.getText()+"', CusGender='"+text_cusGender.getText()+"',  CusPhone='"+text_cusPhone.getText()+"', CusAddress='"+text_cusAddress.getText()+"' WHERE CusID = "+text_cusID.getText();
        executeSQlQuery_Category(query, "Updated");

        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void text_iSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_iSearchKeyReleased
        // TODO add your handling code here:
        try{

            // con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();
            
            String selection = jComboBox3.getSelectedItem().toString();
            
            if(selection == "Max"){
                
            }else{
                
            
            String selectQuery = "select * from Invoice where "+selection+"=?";
            pst = con.prepareStatement(selectQuery);
            
            //productsearch_textfield3.setText(selection);
            
            pst.setString(1, text_iSearch.getText());
            rs=pst.executeQuery();
            table_Invoice.setModel(DbUtils.resultSetToTableModel(rs));

            //productsearch_textfield3.setText(selection);
            //if(productsearch_textfield3.getText() == "Max");
            //{
                //System.out.println("Max");
            //}
            //if(selection.equals("Max")){
                //String selectTopQuery = "select TOP(3) from Invoice Order by SubAmount DESC";
                //pst = con.prepareStatement(selectTopQuery);
                //pst.setString(1, productsearch_textfield3.getText());
                //rs=pst.executeQuery();
                //jTable6.setModel(DbUtils.resultSetToTableModel(rs));
            //}
            }
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        /*String cusSearch = productsearch_textfield3.getText();
        
        try{
            
            //search for ID
            if(cusSearch.matches("^[0-9]")){
                String selectQuery = "select * from Invoice where InvoiceNo="+cusSearch;
                pst = con.prepareStatement(selectQuery);
                rs = pst.executeQuery();
                jTable6.setModel(DbUtils.resultSetToTableModel(rs));
                
            }
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }*/
    }//GEN-LAST:event_text_iSearchKeyReleased

    private void productsearch_textfield4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productsearch_textfield4KeyReleased
        // TODO add your handling code here:
        try{

            // con =  DriverManager.getConnection(URL , user , pass);
            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String selection = (String)jComboBox2.getSelectedItem();
            String selectQuery = "select * from InvoiceDetail where "+selection+"=?";
            pst = con.prepareStatement(selectQuery);
            pst.setString(1, productsearch_textfield4.getText());
            rs=pst.executeQuery();
            table_InvoiceDetail.setModel(DbUtils.resultSetToTableModel(rs));

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
    }//GEN-LAST:event_productsearch_textfield4KeyReleased

    private void table_InvoiceDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_InvoiceDetailMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table_InvoiceDetail.getModel();
        int selectedRow = table_InvoiceDetail.getSelectedRow();

        text_pCNo6.setText(model.getValueAt(selectedRow, 2).toString());
        text_pCNo1.setText(model.getValueAt(selectedRow, 1).toString());
        text_pCNo2.setText(model.getValueAt(selectedRow, 3).toString());
        
        String cusID = text_pCNo1.getText();
        String pID = text_pCNo2.getText();
        try{

            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String selectCustomerQuery = "select CusName from Customer WHERE CusID="+cusID;
            rs = st.executeQuery(selectCustomerQuery);

            if(rs.next()){
                String cName = rs.getString("CusName");
                text_pCNo1.setText(cName);
                
                try{

                    con =  DB_Connection.createConnection();
                    st=con.createStatement();

                    String selectProductQuery = "select ProductName from Product WHERE ProductNo="+pID;
                    rs = st.executeQuery(selectProductQuery);

                    if(rs.next()){
                        String pName = rs.getString("ProductName");
                        text_pCNo2.setText(pName);

                    }else{
                        JOptionPane.showMessageDialog(null," Don't Have");
                    }

                }catch (Exception e) {
                    throw new Error("Problem", e);
                }
                
            }else{
                JOptionPane.showMessageDialog(null," Don't Have");
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
        
    }//GEN-LAST:event_table_InvoiceDetailMouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        
        iv.clearTableInvoice();
        iv.show_Invoice();
       
        jDateChooser3.setCalendar(null);
        jDateChooser4.setCalendar(null);
        
        text_pCNo4.setText("");
        text_pCNo3.setText("");
        
        text_iSearch.setText("");
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        id.clearInDetail();
        id.show_InDetail();
        
        productsearch_textfield4.setText("");
        
        text_pCNo1.setText("");
        text_pCNo2.setText("");
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jComboBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseClicked
        // TODO add your handling code here:
        try{

            con =  DB_Connection.createConnection();
            st=con.createStatement();
            
            String selection = jComboBox3.getSelectedItem().toString();
           
            text_iSearch.setText(selection);
            
            //find Top Amount
            if(selection == "MaxTotal"){
                String selectTopQuery = "select TOP(3) * from Invoice Order by Total DESC";
                pst = con.prepareStatement(selectTopQuery);
                rs=pst.executeQuery();
                table_Invoice.setModel(DbUtils.resultSetToTableModel(rs));
                text_iSearch.setText("");
                
            }else if(selection == "MinTotal"){
                String selectTopQuery = "select TOP(3) * from Invoice Order by Total ASC";
                pst = con.prepareStatement(selectTopQuery);
                rs=pst.executeQuery();
                table_Invoice.setModel(DbUtils.resultSetToTableModel(rs));
                text_iSearch.setText("");
                
            }else{
                text_iSearch.setText("");
            }
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
       
    }//GEN-LAST:event_jComboBox3MouseClicked

    private void jComboBox3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox3KeyPressed
        // TODO add your handling code here:
        try{

            con =  DB_Connection.createConnection();
            st=con.createStatement();
            
            String selection = jComboBox3.getSelectedItem().toString();
           
            text_iSearch.setText(selection);
            
            if(selection == "Max"){
                String selectTopQuery = "select TOP(3) * from Invoice Order by SubAmount DESC";
                pst = con.prepareStatement(selectTopQuery);
                
                rs=pst.executeQuery();
                table_Invoice.setModel(DbUtils.resultSetToTableModel(rs));
                
            }
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//GEN-LAST:event_jComboBox3KeyPressed

    private void jComboBox3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3MouseDragged

    private void text_cusSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_cusSearchActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_text_cusSearchActionPerformed

    private void table_InvoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_InvoiceMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table_Invoice.getModel();
        int selectedRow = table_Invoice.getSelectedRow();

        
        text_pCNo5.setText(model.getValueAt(selectedRow, 0).toString());
        text_pCNo4.setText(model.getValueAt(selectedRow, 2).toString());
        text_pCNo3.setText(model.getValueAt(selectedRow, 3).toString());
        
        String cusID = text_pCNo4.getText();
        String staffID = text_pCNo3.getText();
        try{

            con =  DB_Connection.createConnection();
            st=con.createStatement();

            String selectCustomerQuery = "select CusName from Customer WHERE CusID="+cusID;
            rs = st.executeQuery(selectCustomerQuery);

            if(rs.next()){
                String cName = rs.getString("CusName");
                text_pCNo4.setText(cName);
                
                try{

                    con =  DB_Connection.createConnection();
                    st=con.createStatement();

                    String selectProductQuery = "select StaffName from Staff WHERE StaffID="+staffID;
                    rs = st.executeQuery(selectProductQuery);

                    if(rs.next()){
                        String pName = rs.getString("StaffName");
                        text_pCNo3.setText(pName);

                    }else{
                        JOptionPane.showMessageDialog(null," Don't Have");
                    }

                }catch (Exception e) {
                    throw new Error("Problem", e);
                }
                
            }else{
                JOptionPane.showMessageDialog(null," Don't Have");
            }

        }catch (Exception e) {
            throw new Error("Problem", e);
        }
        
    }//GEN-LAST:event_table_InvoiceMouseClicked

    private void jComboBox5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox5MouseEntered
        // TODO add your handling code here:
        try{

            con =  DB_Connection.createConnection();
            st=con.createStatement();
            
            String selection = jComboBox5.getSelectedItem().toString();
           
            
            //find Top Amount
            if(selection == "Max Amount"){
                String selectTopQuery = "select TOP(3) * from InvoiceDetail Order by Amount DESC";
                pst = con.prepareStatement(selectTopQuery);
                rs=pst.executeQuery();
                table_InvoiceDetail.setModel(DbUtils.resultSetToTableModel(rs));
                
            }else if(selection == "Min Amount"){
                String selectTopQuery = "select TOP(3) * from InvoiceDetail Order by Amount ASC";
                pst = con.prepareStatement(selectTopQuery);
                rs=pst.executeQuery();
                table_InvoiceDetail.setModel(DbUtils.resultSetToTableModel(rs));
                
            }else if(selection == "Max Sale QTY"){
                String selectTopQuery = "select TOP(3) * from InvoiceDetail Order by SaleQTY DESC";
                pst = con.prepareStatement(selectTopQuery);
                rs=pst.executeQuery();
                table_InvoiceDetail.setModel(DbUtils.resultSetToTableModel(rs));
                
            }else if(selection == "Min Sale QTY"){
                String selectTopQuery = "select TOP(3) * from InvoiceDetail Order by SaleQTY ASC";
                pst = con.prepareStatement(selectTopQuery);
                rs=pst.executeQuery();
                table_InvoiceDetail.setModel(DbUtils.resultSetToTableModel(rs));
                
            }
        }catch (Exception e) {
            throw new Error("Problem", e);
        }
    }//GEN-LAST:event_jComboBox5MouseEntered

    private void text_pCNo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_pCNo4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_pCNo4ActionPerformed

    private void text_pCNo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_pCNo5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_pCNo5ActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DashBoard1;
    private javax.swing.JLabel History_Dashboard;
    private javax.swing.JLabel History_Dashboard1;
    private javax.swing.JLabel History_Dashboard2;
    private javax.swing.JLabel History_Dashboard3;
    private javax.swing.JLabel Product_Dashboard;
    private com.toedter.calendar.JDateChooser calender_expireDate;
    private com.toedter.calendar.JDateChooser calender_receivingDate;
    private javax.swing.JButton category_add;
    private javax.swing.JLabel category_dashboard;
    private javax.swing.JButton category_delete;
    private javax.swing.JPanel category_pane;
    private javax.swing.JButton category_reset;
    private javax.swing.JTextField category_txterror;
    private javax.swing.JButton category_update;
    private javax.swing.JTextField categorysearch_textfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    protected javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblCategoryNo;
    private javax.swing.JPanel panestaff_dashboard;
    private javax.swing.JPanel panestaff_dashboard1;
    private javax.swing.JButton product_add;
    private javax.swing.JButton product_delete;
    private javax.swing.JButton product_reset;
    private javax.swing.JButton product_update;
    private javax.swing.JTextField productno_textfield;
    private javax.swing.JTextField productno_textfield1;
    private javax.swing.JTextField productsearch_textfield;
    private javax.swing.JTextField productsearch_textfield1;
    private javax.swing.JTextField productsearch_textfield4;
    private javax.swing.JTextField sAddress;
    private javax.swing.JTextField sGender;
    private javax.swing.JTextField sID;
    private javax.swing.JTextField sName;
    private javax.swing.JTextField sPassword;
    private javax.swing.JTextField sPhone;
    private javax.swing.JTextField sPosition;
    private javax.swing.JLabel staff_dashboard;
    private javax.swing.JLabel staff_dashboard1;
    private javax.swing.JTable table_Category;
    public javax.swing.JTable table_Customer;
    private javax.swing.JTable table_Invoice;
    private javax.swing.JTable table_InvoiceDetail;
    protected javax.swing.JTable table_Product;
    public javax.swing.JTable table_Staff;
    private javax.swing.JTabbedPane tappane;
    private javax.swing.JTextField text_InvoiceID;
    private javax.swing.JTextField text_cusAddress;
    private javax.swing.JTextField text_cusGender;
    private javax.swing.JTextField text_cusID;
    private javax.swing.JTextField text_cusName;
    private javax.swing.JTextField text_cusPhone;
    private javax.swing.JTextField text_cusSearch;
    private javax.swing.JTextField text_iSearch;
    private javax.swing.JTextField text_inDetailID;
    private javax.swing.JTextField text_pCNo;
    private javax.swing.JTextField text_pCNo1;
    private javax.swing.JTextField text_pCNo2;
    private javax.swing.JTextField text_pCNo3;
    private javax.swing.JTextField text_pCNo4;
    private javax.swing.JTextField text_pCNo5;
    private javax.swing.JTextField text_pCNo6;
    private javax.swing.JTextField text_pName;
    private javax.swing.JTextField text_pQuantity;
    private javax.swing.JTextField text_pSellingPrice;
    private javax.swing.JTextField text_unitPrice;
    private javax.swing.JTextField txtcategoryname;
    // End of variables declaration//GEN-END:variables

}
